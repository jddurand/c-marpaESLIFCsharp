#cmakedefine MARPAESLIF_HAVE_LONG_LONG
#cmakedefine C2CSHARP_TYPE_INT_IS_INT
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;

namespace org.parser.marpa
{
    public class marpaESLIFShr
    {
        public enum marpaESLIFValueResultBool_t : @C2CSHARP_TYPE_ENUM@
        {
            MARPAESLIFVALUERESULTBOOL_FALSE = 0,
            MARPAESLIFVALUERESULTBOOL_TRUE = 1
        }
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate void marpaESLIFValueResultFreeCallback_t(IntPtr userDatavp, IntPtr marpaESLIFValueResultp);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate void marpaESLIFReaderDispose_t(IntPtr userDatavp, IntPtr inputcp, @C2CSHARP_TYPE_SIZE_T@ inputl, @C2CSHARP_TYPE_SHORT@ eofb, @C2CSHARP_TYPE_SHORT@ characterStreamb, IntPtr encodings, @C2CSHARP_TYPE_SIZE_T@ encodingl);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFReader_t(IntPtr userDatavp, ref IntPtr inputcpp, ref @C2CSHARP_TYPE_SIZE_T@ inputlp, ref @C2CSHARP_TYPE_SHORT@ eofbp, ref @C2CSHARP_TYPE_SHORT@ characterStreambp, ref IntPtr encodingsp, ref @C2CSHARP_TYPE_SIZE_T@ encodinglp, ref marpaESLIFReaderDispose_t disposeCallbackpp);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizerIfCallback_t(IntPtr userDatavp, IntPtr marpaESLIFRecognizerp, IntPtr marpaESLIFValueResultp, ref marpaESLIFValueResultBool_t marpaESLIFValueResultBoolp);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate marpaESLIFRecognizerIfCallback_t marpaESLIFRecognizerIfActionResolver_t(IntPtr userDatavp, IntPtr marpaESLIFRecognizerp, IntPtr actions);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizerEventCallback_t(IntPtr userDatavp, IntPtr marpaESLIFRecognizerp, IntPtr eventArrayp, @C2CSHARP_TYPE_SIZE_T@ eventArrayl, ref marpaESLIFValueResultBool_t marpaESLIFValueResultBoolp);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate marpaESLIFRecognizerEventCallback_t marpaESLIFRecognizerEventActionResolver_t(IntPtr userDatavp, IntPtr marpaESLIFRecognizerp, IntPtr actions);
    
        public enum marpaESLIFCalloutBlockEnum_t : @C2CSHARP_TYPE_ENUM@
        {
            MARPAESLIFCALLOUTBLOCK_CALLOUT_NUMBER = 0,
            MARPAESLIFCALLOUTBLOCK_CALLOUT_STRING,
            MARPAESLIFCALLOUTBLOCK_SUBJECT,
            MARPAESLIFCALLOUTBLOCK_PATTERN,
            MARPAESLIFCALLOUTBLOCK_CAPTURE_TOP,
            MARPAESLIFCALLOUTBLOCK_CAPTURE_LAST,
            MARPAESLIFCALLOUTBLOCK_OFFSET_VECTOR,
            MARPAESLIFCALLOUTBLOCK_MARK,
            MARPAESLIFCALLOUTBLOCK_START_MATCH,
            MARPAESLIFCALLOUTBLOCK_CURRENT_POSITION,
            MARPAESLIFCALLOUTBLOCK_NEXT_ITEM,
            MARPAESLIFCALLOUTBLOCK_GRAMMAR_LEVEL,
            MARPAESLIFCALLOUTBLOCK_SYMBOL_ID,
            _MARPAESLIFCALLOUTBLOCK_SIZE,
        }
    
        public string[] marpaESLIFCalloutKeysp = {
            "callout_number",
            "callout_string",
            "subject",
            "pattern",
            "capture_top",
            "capture_last",
            "offset_vector",
            "mark",
            "start_match",
            "current_position",
            "next_item",
            "grammar_level",
            "symbol_id"
        };
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizerRegexCallback_t(IntPtr userDatavp, IntPtr marpaESLIFRecognizerp, IntPtr marpaESLIFCalloutBlockp, ref IntPtr marpaESLIFValueResultOutp);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate marpaESLIFRecognizerRegexCallback_t marpaESLIFRecognizerRegexActionResolver_t(IntPtr userDatavp, IntPtr marpaESLIFRecognizerp, IntPtr actions);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizerGeneratorCallback_t(IntPtr userDatavp, IntPtr marpaESLIFRecognizerp, IntPtr contextp, ref IntPtr marpaESLIFValueResultOutp);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate marpaESLIFRecognizerGeneratorCallback_t marpaESLIFRecognizerGeneratorActionResolver_t(IntPtr userDatavp, IntPtr marpaESLIFRecognizerp, IntPtr actions);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizerImport_t(IntPtr marpaESLIFRecognizerp, IntPtr userDatavp, IntPtr marpaESLIFValueResultp, @C2CSHARP_TYPE_SHORT@ haveUndefb);
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFRecognizerOption_t@)]
        public struct marpaESLIFRecognizerOption_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_userDatavp@)] public IntPtr userDatavp;          /* User specific context */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_readerCallbackp@)] public marpaESLIFReader_t readerCallbackp;     /* Reader */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_disableThresholdb@)] public @C2CSHARP_TYPE_SHORT@ disableThresholdb;   /* Default: 0 */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_exhaustedb@)] public @C2CSHARP_TYPE_SHORT@ exhaustedb;          /* Exhaustion event. Default: 0 */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_newlineb@)] public @C2CSHARP_TYPE_SHORT@ newlineb;            /* Count line/column numbers. Default: 0 */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_trackb@)] public @C2CSHARP_TYPE_SHORT@ trackb;              /* Track absolute position. Default: 0 */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_bufsizl@)] public @C2CSHARP_TYPE_SIZE_T@ bufsizl;             /* Minimum stream buffer size: Recommended: 0 (publicly, a system default will apply) */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_buftriggerperci@)] public @C2CSHARP_TYPE_UNSIGNED_INT@ buftriggerperci;     /* Excess number of bytes, in percentage of bufsizl, where stream buffer size is reduced. Recommended: 50 */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_bufaddperci@)] public @C2CSHARP_TYPE_UNSIGNED_INT@ bufaddperci;         /* Policy of minimum of bytes for increase, in percentage of current allocated size, when stream buffer size need to augment. Recommended: 50 */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_ifActionResolverp@)] public marpaESLIFRecognizerIfActionResolver_t ifActionResolverp;   /* Will return the function doing the wanted if action */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_eventActionResolverp@)] public marpaESLIFRecognizerEventActionResolver_t eventActionResolverp; /* Will return the function doing the wanted event action */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_regexActionResolverp@)] public marpaESLIFRecognizerRegexActionResolver_t regexActionResolverp; /* Will return the function doing the wanted regex callout action */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_generatorActionResolverp@)] public marpaESLIFRecognizerGeneratorActionResolver_t generatorActionResolverp; /* Will return the function doing the wanted symbol generation action */
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerOption_t_importerp@)] public marpaESLIFRecognizerImport_t importerp;           /* If end-user want to import a marpaESLIFValueResult */
        }
    
        public enum marpaESLIFEventType_t
        {
            MARPAESLIF_EVENTTYPE_NONE = 0x00,
            MARPAESLIF_EVENTTYPE_COMPLETED = 0x01, /* Grammar event */
            MARPAESLIF_EVENTTYPE_NULLED = 0x02, /* Grammar event */
            MARPAESLIF_EVENTTYPE_PREDICTED = 0x04, /* Grammar event */
            MARPAESLIF_EVENTTYPE_BEFORE = 0x08, /* Just before symbol is commited */
            MARPAESLIF_EVENTTYPE_AFTER = 0x10, /* Just after symbol is commited */
            MARPAESLIF_EVENTTYPE_EXHAUSTED = 0x20, /* Exhaustion */
            MARPAESLIF_EVENTTYPE_DISCARD = 0x40,  /* Discard */
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFEvent_t@)]
        public struct marpaESLIFEvent_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFEvent_t_type@)] public marpaESLIFEventType_t type;
            [FieldOffset(@OFFSETOF_marpaESLIFEvent_t_symbols@)] public IntPtr symbols; /* Symbol name, always NULL if exhausted event, always ':discard' if discard event */
            [FieldOffset(@OFFSETOF_marpaESLIFEvent_t_events@)] public IntPtr events;  /* Event name, always NULL if exhaustion eent */
        }
    
        public enum marpaESLIFValueType_t
        {
            MARPAESLIF_VALUE_TYPE_UNDEF = 0,
            MARPAESLIF_VALUE_TYPE_CHAR,
            MARPAESLIF_VALUE_TYPE_SHORT,
            MARPAESLIF_VALUE_TYPE_INT,
            MARPAESLIF_VALUE_TYPE_LONG,
            MARPAESLIF_VALUE_TYPE_FLOAT,
            MARPAESLIF_VALUE_TYPE_DOUBLE,
            MARPAESLIF_VALUE_TYPE_PTR,
            MARPAESLIF_VALUE_TYPE_ARRAY,
            MARPAESLIF_VALUE_TYPE_BOOL,
            MARPAESLIF_VALUE_TYPE_STRING,
            MARPAESLIF_VALUE_TYPE_ROW,
            MARPAESLIF_VALUE_TYPE_TABLE,
            MARPAESLIF_VALUE_TYPE_LONG_DOUBLE,
    #if MARPAESLIF_HAVE_LONG_LONG
            MARPAESLIF_VALUE_TYPE_LONG_LONG,
    #endif
            MARPAESLIF_VALUE_TYPE_OFFSET_AND_LENGTH,
        }
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFValueRuleCallback_t(IntPtr userDatavp, IntPtr marpaESLIFValuep, @C2CSHARP_TYPE_INT@ arg0i, @C2CSHARP_TYPE_INT@ argni, @C2CSHARP_TYPE_INT@ resulti, @C2CSHARP_TYPE_SHORT@ nullableb);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFValueSymbolCallback_t(IntPtr userDatavp, IntPtr marpaESLIFValuep, IntPtr marpaESLIFValueResult, @C2CSHARP_TYPE_INT@ resulti);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate marpaESLIFValueRuleCallback_t marpaESLIFValueRuleActionResolver_t(IntPtr userDatavp, IntPtr marpaESLIFValuep, IntPtr actions);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate marpaESLIFValueSymbolCallback_t marpaESLIFValueSymbolActionResolver_t(IntPtr userDatavp, IntPtr marpaESLIFValuep, IntPtr actions);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate void marpaESLIFRepresentationDispose_t(IntPtr userDatavp, IntPtr inputcp, @C2CSHARP_TYPE_SIZE_T@ inputl, IntPtr encodingasciis);
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFRepresentation_t(IntPtr userDatavp, IntPtr marpaESLIFValueResultp, ref IntPtr inputcpp, ref @C2CSHARP_TYPE_SIZE_T@ inputlp, ref IntPtr encodingasciisp, ref marpaESLIFRepresentationDispose_t disposeCallbackpp, ref @C2CSHARP_TYPE_SHORT@ stringbp);
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFValueResultPtr_t@)]
        public struct marpaESLIFValueResultPtr_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultPtr_t_p@)] public IntPtr p;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultPtr_t_shallowb@)] public @C2CSHARP_TYPE_SHORT@ shallowb;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultPtr_t_freeUserDatavp@)] public IntPtr freeUserDatavp;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultPtr_t_freeCallbackp@)] public marpaESLIFValueResultFreeCallback_t freeCallbackp;
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFValueResultArray_t@)]
        public struct marpaESLIFValueResultArray_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultArray_t_p@)] public IntPtr p;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultArray_t_shallowb@)] public @C2CSHARP_TYPE_SHORT@ shallowb;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultArray_t_freeUserDatavp@)] public IntPtr freeUserDatavp;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultArray_t_freeCallbackp@)] public marpaESLIFValueResultFreeCallback_t freeCallbackp;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultArray_t_sizel@)] public @C2CSHARP_TYPE_SIZE_T@ sizel;
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFValueResultString_t@)]
        public struct marpaESLIFValueResultString_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultString_t_p@)] public IntPtr p;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultString_t_shallowb@)] public @C2CSHARP_TYPE_SHORT@ shallowb;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultString_t_freeUserDatavp@)] public IntPtr freeUserDatavp;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultString_t_freeCallbackp@)] public marpaESLIFValueResultFreeCallback_t freeCallbackp;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultString_t_sizel@)] public @C2CSHARP_TYPE_SIZE_T@ sizel;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultString_t_encodingasciis@)] public IntPtr encodingasciis;
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFValueResultRow_t@)]
        public struct marpaESLIFValueResultRow_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultRow_t_p@)] public IntPtr p;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultRow_t_shallowb@)] public @C2CSHARP_TYPE_SHORT@ shallowb;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultRow_t_freeUserDatavp@)] public IntPtr freeUserDatavp;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultRow_t_freeCallbackp@)] public marpaESLIFValueResultFreeCallback_t freeCallbackp;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultRow_t_sizel@)] public @C2CSHARP_TYPE_SIZE_T@ sizel;
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFValueResultTable_t@)]
        public struct marpaESLIFValueResultTable_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultTable_t_p@)] public IntPtr p;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultTable_t_shallowb@)] public @C2CSHARP_TYPE_SHORT@ shallowb;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultTable_t_freeUserDatavp@)] public IntPtr freeUserDatavp;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultTable_t_freeCallbackp@)] public marpaESLIFValueResultFreeCallback_t freeCallbackp;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultTable_t_sizel@)] public @C2CSHARP_TYPE_SIZE_T@ sizel;
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFValueResultOffsetAndLength_t@)]
        public struct marpaESLIFValueResultOffsetAndLength_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultOffsetAndLength_t_p@)] public @C2CSHARP_TYPE_PTRDIFF_T@ p;
            [FieldOffset(@OFFSETOF_marpaESLIFValueResultOffsetAndLength_t_sizel@)] public @C2CSHARP_TYPE_SIZE_T@ sizel;
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFAlternative_t@)]
        public struct marpaESLIFAlternative_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFAlternative_t_names@)] public IntPtr names;       /* Symbol name (from automatic description or explicit name adverb) */
            [FieldOffset(@OFFSETOF_marpaESLIFAlternative_t_value@)] [MarshalAs(UnmanagedType.ByValArray, SizeConst = @SIZEOF_marpaESLIFValueResult_t@)] public byte[] value;       /* Value */
            [FieldOffset(@OFFSETOF_marpaESLIFAlternative_t_grammarLengthl@)] public @C2CSHARP_TYPE_SIZE_T@ grammarLengthl; /* Length within the grammar (1 in the token-stream model) */
        }
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFValueImport_t(IntPtr marpaESLIFValuep, IntPtr userDatavp, IntPtr marpaESLIFValueResultp, @C2CSHARP_TYPE_SHORT@ haveUndefb);
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFValueOption_t@)]
        public struct marpaESLIFValueOption_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFValueOption_t_userDatavp@)] public IntPtr userDatavp;            /* User specific context */
            [FieldOffset(@OFFSETOF_marpaESLIFValueOption_t_ruleActionResolverp@)] public marpaESLIFValueRuleActionResolver_t ruleActionResolverp;   /* Will return the function doing the wanted rule action */
            [FieldOffset(@OFFSETOF_marpaESLIFValueOption_t_symbolActionResolverp@)] public marpaESLIFValueSymbolActionResolver_t symbolActionResolverp; /* Will return the function doing the wanted symbol action */
            [FieldOffset(@OFFSETOF_marpaESLIFValueOption_t_importerp@)] public marpaESLIFValueImport_t importerp;             /* Will ask end-user to import a marpaESLIFValueResult */
            [FieldOffset(@OFFSETOF_marpaESLIFValueOption_t_highRankOnlyb@)] public @C2CSHARP_TYPE_SHORT@ highRankOnlyb;         /* Default: 1 */
            [FieldOffset(@OFFSETOF_marpaESLIFValueOption_t_orderByRankb@)] public @C2CSHARP_TYPE_SHORT@ orderByRankb;          /* Default: 1 */
            [FieldOffset(@OFFSETOF_marpaESLIFValueOption_t_ambiguousb@)] public @C2CSHARP_TYPE_SHORT@ ambiguousb;            /* Default: 0 */
            [FieldOffset(@OFFSETOF_marpaESLIFValueOption_t_nullb@)] public @C2CSHARP_TYPE_SHORT@ nullb;                 /* Default: 0 */
            [FieldOffset(@OFFSETOF_marpaESLIFValueOption_t_maxParsesi@)] public @C2CSHARP_TYPE_INT@ maxParsesi;            /* Default: 0 */
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFRecognizerProgress_t@)]
        public struct marpaESLIFRecognizerProgress_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerProgress_t_earleySetIdi@)] public @C2CSHARP_TYPE_INT@ earleySetIdi;
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerProgress_t_earleySetOrigIdi@)] public @C2CSHARP_TYPE_INT@ earleySetOrigIdi;
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerProgress_t_rulei@)] public @C2CSHARP_TYPE_INT@ rulei;
            [FieldOffset(@OFFSETOF_marpaESLIFRecognizerProgress_t_positioni@)] public @C2CSHARP_TYPE_INT@ positioni;
        }
    
        public enum marpaESLIFActionType_t : @C2CSHARP_TYPE_ENUM@
        {
            MARPAESLIF_ACTION_TYPE_NAME = 0,
            MARPAESLIF_ACTION_TYPE_STRING,
            MARPAESLIF_ACTION_TYPE_LUA,
            MARPAESLIF_ACTION_TYPE_LUA_FUNCTION
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFAction_t@)]
        public struct marpaESLIFAction_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFAction_t_type@)] public marpaESLIFActionType_t type;
            [FieldOffset(@OFFSETOF_marpaESLIFAction_t_u.names@)] public IntPtr names;
            [FieldOffset(@OFFSETOF_marpaESLIFAction_t_u.stringp@)] public IntPtr stringp;
            [FieldOffset(@OFFSETOF_marpaESLIFAction_t_u.luas@)] public IntPtr luas;
            [FieldOffset(@OFFSETOF_marpaESLIFAction_t_u.luaFunction@)] public marpaESLIFLuaFunction_t luaFunction;
        }

        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFString_t@)]
        public struct marpaESLIFString_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFString_t_bytep@)] public IntPtr bytep;            /* pointer bytes */
            [FieldOffset(@OFFSETOF_marpaESLIFString_t_bytel@)] public @C2CSHARP_TYPE_SIZE_T@ bytel;            /* number of bytes */
            [FieldOffset(@OFFSETOF_marpaESLIFString_t_encodingasciis@)] public IntPtr encodingasciis;   /* Encoding of bytes, itself being writen in ASCII encoding, NUL byte terminated */
            [FieldOffset(@OFFSETOF_marpaESLIFString_t_asciis@)] public IntPtr asciis;           /* ASCII (un-translatable bytes are changed to a replacement character) translation of previous bytes, NUL byte terminated - never NULL if bytep is not NULL */
            /*
             * Remark: the encodings and asciis pointers are not NULL only when ESLIF know that the buffer is associated to a "description". I.e.
             * this is happening ONLY when parsing the grammar. Raw data never have non-NULL asciis or encodings.
             */
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFLuaFunction_t@)]
        public struct marpaESLIFLuaFunction_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFLuaFunction_t_luas@)] public IntPtr luas;       /* Original action as per the grammar */
            [FieldOffset(@OFFSETOF_marpaESLIFLuaFunction_t_actions@)] public IntPtr actions;    /* The action injected into lua */
            [FieldOffset(@OFFSETOF_marpaESLIFLuaFunction_t_luacb@)] public @C2CSHARP_TYPE_SHORT@ luacb;      /* True if action was in the form ::luac->function */
            [FieldOffset(@OFFSETOF_marpaESLIFLuaFunction_t_luacp@)] public IntPtr luacp;      /* Precompiled chunk. Not NULL only when luacb is true and action as been used at least once */
            [FieldOffset(@OFFSETOF_marpaESLIFLuaFunction_t_luacl@)] public @C2CSHARP_TYPE_SIZE_T@ luacl;      /* Precompiled chunk length */
            [FieldOffset(@OFFSETOF_marpaESLIFLuaFunction_t_luacstripp@)] public IntPtr luacstripp; /* Precompiled stripped chunk - never NULL (it is done during grammar validation) */
            [FieldOffset(@OFFSETOF_marpaESLIFLuaFunction_t_luacstripl@)] public @C2CSHARP_TYPE_SIZE_T@ luacstripl; /* Precompiled stripped chunk length */
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFGrammarDefaults_t@)]
        public struct marpaESLIFGrammarDefaults_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarDefaults_t_defaultRuleActionp@)] public IntPtr defaultRuleActionp;      /* Default action for rules */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarDefaults_t_defaultSymbolActionp@)] public IntPtr defaultSymbolActionp;    /* Default action for symbols */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarDefaults_t_defaultEventActionp@)] public IntPtr defaultEventActionp;     /* Default action for events */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarDefaults_t_defaultRegexActionp@)] public IntPtr defaultRegexActionp;     /* Default action for regex */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarDefaults_t_defaultEncodings@)] public IntPtr defaultEncodings;        /* Default encoding */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarDefaults_t_fallbackEncodings@)] public IntPtr fallbackEncodings;       /* Fallback encoding */
        }
    
        public enum marpaESLIFRulePropertyBit_t : @C2CSHARP_TYPE_ENUM@
        {
            MARPAESLIF_RULE_IS_ACCESSIBLE = 0x01,
            MARPAESLIF_RULE_IS_NULLABLE = 0x02,
            MARPAESLIF_RULE_IS_NULLING = 0x04,
            MARPAESLIF_RULE_IS_LOOP = 0x08,
            MARPAESLIF_RULE_IS_PRODUCTIVE = 0x10,
        }
    
        public enum marpaESLIFSymbolPropertyBit_t : @C2CSHARP_TYPE_ENUM@
        {
            MARPAESLIF_SYMBOL_IS_ACCESSIBLE = 0x01,
            MARPAESLIF_SYMBOL_IS_NULLABLE = 0x02,
            MARPAESLIF_SYMBOL_IS_NULLING = 0x04,
            MARPAESLIF_SYMBOL_IS_PRODUCTIVE = 0x08,
            MARPAESLIF_SYMBOL_IS_START = 0x10,
            MARPAESLIF_SYMBOL_IS_TERMINAL = 0x20,
        }
    
        public enum marpaESLIFSymbolEventBit_t : @C2CSHARP_TYPE_ENUM@
        {
            MARPAESLIF_SYMBOL_EVENT_COMPLETION = 0x01,
            MARPAESLIF_SYMBOL_EVENT_NULLED = 0x02,
            MARPAESLIF_SYMBOL_EVENT_PREDICTION = 0x04,
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFGrammarProperty_t@)]
        public struct marpaESLIFGrammarProperty_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_leveli@)] public @C2CSHARP_TYPE_INT@ leveli;                  /* Grammar level */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_maxLeveli@)] public @C2CSHARP_TYPE_INT@ maxLeveli;               /* Maximum grammar level */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_descp@)] public IntPtr descp;                   /* Grammar description (auto-generated if none) */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_latmb@)] public @C2CSHARP_TYPE_SHORT@ latmb;                   /* LATM ? */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_discardIsFallbackb@)] public @C2CSHARP_TYPE_SHORT@ discardIsFallbackb;      /* Discard is fallback ? */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_defaultSymbolActionp@)] public IntPtr defaultSymbolActionp;    /* Default action for symbols - never NULL */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_defaultRuleActionp@)] public IntPtr defaultRuleActionp;      /* Default action for rules - never NULL */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_defaultEventActionp@)] public IntPtr defaultEventActionp;     /* Default action for event - can be NULL */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_defaultRegexActionp@)] public IntPtr defaultRegexActionp;     /* Default action for regex - can be NULL */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_starti@)] public @C2CSHARP_TYPE_INT@ starti;                  /* Start symbol Id - always >= 0 */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_discardi@)] public @C2CSHARP_TYPE_INT@ discardi;                /* Discard symbol Id (-1 if none) */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_nsymboll@)] public @C2CSHARP_TYPE_SIZE_T@ nsymboll;                /* Number of symbols - always > 0*/
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_symbolip@)] public IntPtr symbolip;                /* Array of symbols Ids - never NULL */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_nrulel@)] public @C2CSHARP_TYPE_SIZE_T@ nrulel;                  /* Number of rules - always > 0*/
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_ruleip@)] public IntPtr ruleip;                  /* Array of rule Ids - never NULL */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_defaultEncodings@)] public IntPtr defaultEncodings;        /* Default encoding */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarProperty_t_fallbackEncodings@)] public IntPtr fallbackEncodings;       /* Fallback encoding */
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFRuleProperty_t@)]
        public struct marpaESLIFRuleProperty_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_idi@)] public @C2CSHARP_TYPE_INT@ idi;                          /* Rule Id */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_descp@)] public IntPtr descp;                        /* Rule alternative name (auto-generated if none) */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_asciishows@)] public IntPtr asciishows;                   /* Rule show (ASCII) */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_lhsi@)] public @C2CSHARP_TYPE_INT@ lhsi;                         /* LHS symbol Id */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_separatori@)] public @C2CSHARP_TYPE_INT@ separatori;                   /* Eventual separator symbol Id (-1 if none) */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_nrhsl@)] public @C2CSHARP_TYPE_SIZE_T@ nrhsl;                        /* Number of RHS, 0 in case of a nullable */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_rhsip@)] public IntPtr rhsip;                        /* Array of RHS Ids, NULL in case of a nullable */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_skipbp@)] public IntPtr skipbp;                       /* Skip flags per RHS, first RHS is at indice 0 and so on, NULL in case of a nullable or a sequence */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_exceptioni@)] public @C2CSHARP_TYPE_INT@ exceptioni;                   /* Exception symbol Id (-1 if none) */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_actionp@)] public IntPtr actionp;                      /* Action */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_discardEvents@)] public IntPtr discardEvents;                /* Discard event name - shallowed with its RHS */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_discardEventb@)] public @C2CSHARP_TYPE_SHORT@ discardEventb;                /* Discard event initial state: 0: off, 1: on */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_ranki@)] public @C2CSHARP_TYPE_INT@ ranki;                        /* Rank */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_nullRanksHighb@)] public @C2CSHARP_TYPE_SHORT@ nullRanksHighb;               /* Null ranks high ? */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_sequenceb@)] public @C2CSHARP_TYPE_SHORT@ sequenceb;                    /* Sequence ? */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_properb@)] public @C2CSHARP_TYPE_SHORT@ properb;                      /* Proper ? */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_minimumi@)] public @C2CSHARP_TYPE_INT@ minimumi;                     /* minimum in case of sequence ? */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_propertyBitSet@)] public @C2CSHARP_TYPE_INT@ propertyBitSet;               /* C.f. marpaESLIFRulePropertyBit_t */
            [FieldOffset(@OFFSETOF_marpaESLIFRuleProperty_t_hideseparatorb@)] public @C2CSHARP_TYPE_SHORT@ hideseparatorb;               /* Separator hiden from arguments ? */
        }
    
        public enum marpaESLIFSymbolType_t : @C2CSHARP_TYPE_ENUM@
        {
            MARPAESLIF_SYMBOLTYPE_TERMINAL = 0,
            MARPAESLIF_SYMBOLTYPE_META,
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFSymbolProperty_t@)]
        public struct marpaESLIFSymbolProperty_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_type@)] public marpaESLIFSymbolType_t type;                   /* Symbol type */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_startb@)] public @C2CSHARP_TYPE_SHORT@ startb;                 /* Start symbol ? */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_discardb@)] public @C2CSHARP_TYPE_SHORT@ discardb;               /* Discard LHS symbol (i.e. :discard) ? */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_discardRhsb@)] public @C2CSHARP_TYPE_SHORT@ discardRhsb;            /* Discard RHS symbol ? */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_lhsb@)] public @C2CSHARP_TYPE_SHORT@ lhsb;                   /* Is an LHS somewhere in its grammar ? */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_topb@)] public @C2CSHARP_TYPE_SHORT@ topb;                   /* Is a top-level symbol in its grammar - implies lhsb */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_idi@)] public @C2CSHARP_TYPE_INT@ idi;                    /* Marpa ID */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_descp@)] public IntPtr descp;                  /* Symbol description */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_eventBefores@)] public IntPtr eventBefores;           /* Pause before */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_eventBeforeb@)] public @C2CSHARP_TYPE_SHORT@ eventBeforeb;           /* Pause before initial state: 0: off, 1: on */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_eventAfters@)] public IntPtr eventAfters;            /* Pause after */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_eventAfterb@)] public @C2CSHARP_TYPE_SHORT@ eventAfterb;            /* Pause after initial state: 0: off, 1: on */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_eventPredicteds@)] public IntPtr eventPredicteds;        /* Event name for prediction */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_eventPredictedb@)] public @C2CSHARP_TYPE_SHORT@ eventPredictedb;        /* Prediction initial state: 0: off, 1: on */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_eventNulleds@)] public IntPtr eventNulleds;           /* Event name for nulled */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_eventNulledb@)] public @C2CSHARP_TYPE_SHORT@ eventNulledb;           /* Nulled initial state: 0: off, 1: on */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_eventCompleteds@)] public IntPtr eventCompleteds;        /* Event name for completion */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_eventCompletedb@)] public @C2CSHARP_TYPE_SHORT@ eventCompletedb;        /* Completion initial state: 0: off, 1: on */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_discardEvents@)] public IntPtr discardEvents;          /* Discard event name - shallow pointer to a :discard rule's discardEvents */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_discardEventb@)] public @C2CSHARP_TYPE_SHORT@ discardEventb;          /* Discard event initial state: 0: off, 1: on - copy of :discard's rule value */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_lookupResolvedLeveli@)] public @C2CSHARP_TYPE_INT@ lookupResolvedLeveli;   /* Resolved grammar level */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_priorityi@)] public @C2CSHARP_TYPE_INT@ priorityi;              /* Symbol priority */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_nullableActionp@)] public IntPtr nullableActionp;        /* Nullable semantic */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_propertyBitSet@)] public @C2CSHARP_TYPE_INT@ propertyBitSet;
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_eventBitSet@)] public @C2CSHARP_TYPE_INT@ eventBitSet;
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_symbolActionp@)] public IntPtr symbolActionp;          /* symbol-action */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_ifActionp@)] public IntPtr ifActionp;              /* if-action */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_generatorActionp@)] public IntPtr generatorActionp;       /* generator-action */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolProperty_t_verboseb@)] public @C2CSHARP_TYPE_SHORT@ verboseb;               /* Symbol is verbose */
        }
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFJSONProposalAction_t(IntPtr userDatavp, IntPtr strings, @C2CSHARP_TYPE_SIZE_T@ stringl, IntPtr marpaESLIFValueResultp, short confidenceb);
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFJSONDecodeOption_t@)]
        public struct marpaESLIFJSONDecodeOption_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFJSONDecodeOption_t_disallowDupkeysb@)] public @C2CSHARP_TYPE_SHORT@ disallowDupkeysb;                /* Do not allow duplicate key in an object */
            [FieldOffset(@OFFSETOF_marpaESLIFJSONDecodeOption_t_maxDepthl@)] public @C2CSHARP_TYPE_SIZE_T@ maxDepthl;                       /* Maximum depth - 0 if no maximum */
            [FieldOffset(@OFFSETOF_marpaESLIFJSONDecodeOption_t_noReplacementCharacterb@)] public @C2CSHARP_TYPE_SHORT@ noReplacementCharacterb;         /* No replacement character for invalid UTF-16 surrogates */
            [FieldOffset(@OFFSETOF_marpaESLIFJSONDecodeOption_t_positiveInfinityActionp@)] public marpaESLIFJSONProposalAction_t positiveInfinityActionp;         /* +Infinity action */
            [FieldOffset(@OFFSETOF_marpaESLIFJSONDecodeOption_t_negativeInfinityActionp@)] public marpaESLIFJSONProposalAction_t negativeInfinityActionp;         /* -Infinity action */
            [FieldOffset(@OFFSETOF_marpaESLIFJSONDecodeOption_t_positiveNanActionp@)] public marpaESLIFJSONProposalAction_t positiveNanActionp;              /* +Nan action */
            [FieldOffset(@OFFSETOF_marpaESLIFJSONDecodeOption_t_negativeNanActionp@)] public marpaESLIFJSONProposalAction_t negativeNanActionp;              /* -Nan action */
            [FieldOffset(@OFFSETOF_marpaESLIFJSONDecodeOption_t_numberActionp@)] public marpaESLIFJSONProposalAction_t numberActionp;                   /* Number action */
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFOption_t@)]
        public struct marpaESLIFOption_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFOption_t_genericLoggerp@)] public IntPtr genericLoggerp;  /* Logger. Default: NULL */
        }
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFGrammarOption_t@)]
        public struct marpaESLIFGrammarOption_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarOption_t_bytep@)] public IntPtr bytep;               /* Input */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarOption_t_bytel@)] public @C2CSHARP_TYPE_SIZE_T@ bytel;               /* Input length in byte unit */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarOption_t_encodings@)] public IntPtr encodings;           /* Input encoding. Default: NULL */
            [FieldOffset(@OFFSETOF_marpaESLIFGrammarOption_t_encodingl@)] public @C2CSHARP_TYPE_SIZE_T@ encodingl;           /* Length of encoding itself. Default: 0 */
        }
    
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate @C2CSHARP_TYPE_SHORT@ marpaESLIFSymbolImport_t(IntPtr marpaESLIFSymbolp, IntPtr userDatavp, IntPtr marpaESLIFValueResultp, @C2CSHARP_TYPE_SHORT@ haveUndefb);
    
        [StructLayout(LayoutKind.Explicit, Size = @SIZEOF_marpaESLIFSymbolOption_t@)]
        public struct marpaESLIFSymbolOption_t
        {
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolOption_t_userDatavp@)] public IntPtr userDatavp;          /* User specific context */
            [FieldOffset(@OFFSETOF_marpaESLIFSymbolOption_t_importerp@)] public marpaESLIFSymbolImport_t importerp;           /* If end-user want to import a marpaESLIFValueResult */
        }
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIF_newp(IntPtr marpaESLIFOptionp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIF_versionb(IntPtr marpaESLIFp, ref IntPtr versionsp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIF_versionMajorb(IntPtr marpaESLIFp, ref @C2CSHARP_TYPE_INT@ versionMajorip);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIF_versionMinorb(IntPtr marpaESLIFp, ref @C2CSHARP_TYPE_INT@ versionMinorip);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIF_versionPatchb(IntPtr marpaESLIFp, ref @C2CSHARP_TYPE_INT@ versionPatchip);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIF_optionp(IntPtr marpaESLIFp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIF_grammarp(IntPtr marpaESLIFp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIF_numberb(IntPtr marpaESLIFp, IntPtr s, @C2CSHARP_TYPE_SIZE_T@ sizel, IntPtr marpaESLIFValueResultp, ref @C2CSHARP_TYPE_SHORT@ confidencebp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFGrammar_newp(IntPtr marpaESLIFp, IntPtr marpaESLIFGrammarOptionp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFGrammar_eslifp(IntPtr marpaESLIFGrammarp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFGrammar_optionp(IntPtr marpaESLIFGrammarp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_ngrammarib(IntPtr marpaESLIFGrammarp, ref @C2CSHARP_TYPE_INT@ ngrammarip);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_defaultsb(IntPtr marpaESLIFGrammarp, IntPtr marpaESLIFGrammarDefaultsp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_defaults_by_levelb(IntPtr marpaESLIFGrammarp, IntPtr marpaESLIFGrammarDefaultsp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_defaults_setb(IntPtr marpaESLIFGrammarp, IntPtr marpaESLIFGrammarDefaultsp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_defaults_by_level_setb(IntPtr marpaESLIFGrammarp, IntPtr marpaESLIFGrammarDefaultsp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_grammar_currentb(IntPtr marpaESLIFGrammarp, ref @C2CSHARP_TYPE_INT@ levelip, ref IntPtr descpp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_grammar_by_levelb(IntPtr marpaESLIFGrammarp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp, ref @C2CSHARP_TYPE_INT@ levelip, ref IntPtr descpp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_grammarproperty_currentb(IntPtr marpaESLIFGrammarp, IntPtr grammarPropertyp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_grammarproperty_by_levelb(IntPtr marpaESLIFGrammarp, IntPtr grammarPropertyp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_rulearray_currentb(IntPtr marpaESLIFGrammarp, ref IntPtr ruleipp, ref @C2CSHARP_TYPE_SIZE_T@ rulelp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_rulearray_by_levelb(IntPtr marpaESLIFGrammarp, ref IntPtr ruleipp, ref @C2CSHARP_TYPE_SIZE_T@ rulelp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_ruleproperty_currentb(IntPtr marpaESLIFGrammarp, @C2CSHARP_TYPE_INT@ rulei, IntPtr rulePropertyp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_ruleproperty_by_levelb(IntPtr marpaESLIFGrammarp, @C2CSHARP_TYPE_INT@ rulei, IntPtr rulePropertyp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_ruledisplayform_currentb(IntPtr marpaESLIFGrammarp, @C2CSHARP_TYPE_INT@ rulei, ref IntPtr ruledisplaysp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_ruledisplayform_by_levelb(IntPtr marpaESLIFGrammarp, @C2CSHARP_TYPE_INT@ rulei, ref IntPtr ruledisplaysp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_symbolarray_currentb(IntPtr marpaESLIFGrammarp, IntPtr symbolipp, ref @C2CSHARP_TYPE_SIZE_T@ symbollp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_symbolarray_by_levelb(IntPtr marpaESLIFGrammarp, IntPtr symbolipp, ref @C2CSHARP_TYPE_SIZE_T@ symbollp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_symbolproperty_currentb(IntPtr marpaESLIFGrammarp, @C2CSHARP_TYPE_INT@ symboli, IntPtr marpaESLIFSymbolPropertyp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_symbolproperty_by_levelb(IntPtr marpaESLIFGrammarp, @C2CSHARP_TYPE_INT@ symboli, IntPtr marpaESLIFSymbolPropertyp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_symboldisplayform_currentb(IntPtr marpaESLIFGrammarp, @C2CSHARP_TYPE_INT@ symboli, ref IntPtr symboldisplaysp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_symboldisplayform_by_levelb(IntPtr marpaESLIFGrammarp, @C2CSHARP_TYPE_INT@ symboli, ref IntPtr symboldisplaysp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_ruleshowform_currentb(IntPtr marpaESLIFGrammarp, @C2CSHARP_TYPE_INT@ rulei, ref IntPtr ruleshowsp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_ruleshowform_by_levelb(IntPtr marpaESLIFGrammarp, @C2CSHARP_TYPE_INT@ rulei, ref IntPtr ruleshowsp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_grammarshowform_currentb(IntPtr marpaESLIFGrammarp, ref IntPtr grammarshowsp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_grammarshowform_by_levelb(IntPtr marpaESLIFGrammarp, ref IntPtr grammarshowsp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_grammarshowscriptb(IntPtr marpaESLIFGrammarp, ref IntPtr grammarscriptsp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_parseb(IntPtr marpaESLIFGrammarp, IntPtr marpaESLIFRecognizerOptionp, IntPtr marpaESLIFValueOptionp, ref @C2CSHARP_TYPE_SHORT@ exhaustedbp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFGrammar_parse_by_levelb(IntPtr marpaESLIFGrammarp, IntPtr marpaESLIFRecognizerOptionp, IntPtr marpaESLIFValueOptionp, ref @C2CSHARP_TYPE_SHORT@ exhaustedbp, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern void marpaESLIFGrammar_freev(IntPtr marpaESLIFGrammarp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFRecognizer_newp(IntPtr marpaESLIFGrammarp, IntPtr marpaESLIFRecognizerOptionp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFRecognizer_newFromp(IntPtr marpaESLIFGrammarp, IntPtr marpaESLIFRecognizerSharedp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_set_exhausted_flagb(IntPtr marpaESLIFRecognizerp, @C2CSHARP_TYPE_SHORT@ exhaustedb);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_isExhaustedb(IntPtr marpaESLIFRecognizerp, ref @C2CSHARP_TYPE_SHORT@ exhaustedbp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_isCanContinueb(IntPtr marpaESLIFRecognizerp, ref @C2CSHARP_TYPE_SHORT@ isCanContinuebp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_shareb(IntPtr marpaESLIFRecognizerp, IntPtr marpaESLIFRecognizerSharedp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_peekb(IntPtr marpaESLIFRecognizerp, IntPtr marpaESLIFRecognizerPeekedp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFRecognizer_grammarp(IntPtr marpaESLIFRecognizerp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFRecognizer_optionp(IntPtr marpaESLIFRecognizerp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_scanb(IntPtr marpaESLIFRecognizerp, @C2CSHARP_TYPE_SHORT@ initialEventsb, ref @C2CSHARP_TYPE_SHORT@ continuebp, ref @C2CSHARP_TYPE_SHORT@ exhaustedbp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_resumeb(IntPtr marpaESLIFRecognizerp, @C2CSHARP_TYPE_SIZE_T@ deltaLengthl, ref @C2CSHARP_TYPE_SHORT@ continuebp, ref @C2CSHARP_TYPE_SHORT@ exhaustedbp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_alternativeb(IntPtr marpaESLIFRecognizerp, IntPtr marpaESLIFAlternativep);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_alternative_completeb(IntPtr marpaESLIFRecognizerp, @C2CSHARP_TYPE_SIZE_T@ lengthl);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_alternative_readb(IntPtr marpaESLIFRecognizerp, IntPtr marpaESLIFAlternativep, @C2CSHARP_TYPE_SIZE_T@ lengthl);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_name_tryb(IntPtr marpaESLIFRecognizerp, IntPtr names, ref @C2CSHARP_TYPE_SHORT@ matchbp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_discardb(IntPtr marpaESLIFRecognizerp, ref @C2CSHARP_TYPE_SIZE_T@ discardlp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_discard_tryb(IntPtr marpaESLIFRecognizerp, ref @C2CSHARP_TYPE_SHORT@ matchbp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_name_expectedb(IntPtr marpaESLIFRecognizerp, ref @C2CSHARP_TYPE_SIZE_T@ nNamelp, ref IntPtr namesArraypp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_name_last_pauseb(IntPtr marpaESLIFRecognizerp, IntPtr names, ref IntPtr pausesp, ref @C2CSHARP_TYPE_SIZE_T@ pauselp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_name_last_tryb(IntPtr marpaESLIFRecognizerp, IntPtr names, ref IntPtr trysp, ref @C2CSHARP_TYPE_SIZE_T@ trylp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_discard_last_tryb(IntPtr marpaESLIFRecognizerp, ref IntPtr trysp, ref @C2CSHARP_TYPE_SIZE_T@ trylp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_discard_lastb(IntPtr marpaESLIFRecognizerp, ref IntPtr lastsp, ref @C2CSHARP_TYPE_SIZE_T@ lastlp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_isEofb(IntPtr marpaESLIFRecognizerp, ref @C2CSHARP_TYPE_SHORT@ eofbp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_isStartCompleteb(IntPtr marpaESLIFRecognizerp, ref @C2CSHARP_TYPE_SHORT@ completebp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_event_onoffb(IntPtr marpaESLIFRecognizerp, IntPtr symbols, marpaESLIFEventType_t eventSeti, @C2CSHARP_TYPE_SHORT@ onoffb);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_eventb(IntPtr marpaESLIFRecognizerp, ref @C2CSHARP_TYPE_SIZE_T@ eventArraylp, IntPtr eventArraypp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_progressLogb(IntPtr marpaESLIFRecognizerp, @C2CSHARP_TYPE_INT@ starti, @C2CSHARP_TYPE_INT@ endi, genericLoggerShr.genericLoggerLevel_t logleveli);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_progressb(IntPtr marpaESLIFRecognizerp, @C2CSHARP_TYPE_INT@ starti, @C2CSHARP_TYPE_INT@ endi, ref @C2CSHARP_TYPE_SIZE_T@ progresslp, IntPtr progresspp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_inputb(IntPtr marpaESLIFRecognizerp, IntPtr inputsp, ref @C2CSHARP_TYPE_SIZE_T@ inputlp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_errorb(IntPtr marpaESLIFRecognizerp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_locationb(IntPtr marpaESLIFRecognizerp, ref @C2CSHARP_TYPE_SIZE_T@ linelp, ref @C2CSHARP_TYPE_SIZE_T@ columnlp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_readb(IntPtr marpaESLIFRecognizerp, IntPtr inputsp, ref @C2CSHARP_TYPE_SIZE_T@ inputlp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_last_completedb(IntPtr marpaESLIFRecognizerp, IntPtr names, ref IntPtr offsetpp, ref @C2CSHARP_TYPE_SIZE_T@ lengthlp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_hook_discardb(IntPtr marpaESLIFRecognizerp, @C2CSHARP_TYPE_SHORT@ discardOnOffb);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_hook_discard_switchb(IntPtr marpaESLIFRecognizerp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_symbol_tryb(IntPtr marpaESLIFRecognizerp, IntPtr marpaESLIFSymbolp, ref @C2CSHARP_TYPE_SHORT@ matchbp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern void marpaESLIFRecognizer_freev(IntPtr marpaESLIFRecognizerp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFValue_newp(IntPtr marpaESLIFRecognizerp, IntPtr marpaESLIFValueOptionp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFValue_recognizerp(IntPtr marpaESLIFValuep);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFValue_optionp(IntPtr marpaESLIFValuep);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValue_value_startb(IntPtr marpaESLIFValuep, ref @C2CSHARP_TYPE_INT@ startip);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValue_value_lengthb(IntPtr marpaESLIFValuep, ref @C2CSHARP_TYPE_INT@ lengthip);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValue_contextb(IntPtr marpaESLIFValuep, IntPtr symbolsp, ref @C2CSHARP_TYPE_INT@ symbolip, IntPtr rulesp, ref @C2CSHARP_TYPE_INT@ ruleip);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern void marpaESLIFValue_freev(IntPtr marpaESLIFValuep);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValue_stack_setb(IntPtr marpaESLIFValuep, @C2CSHARP_TYPE_INT@ indicei, IntPtr marpaESLIFValueResultp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFValue_stack_getp(IntPtr marpaESLIFValuep, @C2CSHARP_TYPE_INT@ indicei);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValue_stack_forgetb(IntPtr marpaESLIFValuep, @C2CSHARP_TYPE_INT@ indicei);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValue_stack_getAndForgetb(IntPtr marpaESLIFValuep, @C2CSHARP_TYPE_INT@ indicei, IntPtr marpaESLIFValueResultp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValue_marpaESLIFValueResult_freeb(IntPtr marpaESLIFValuep, IntPtr marpaESLIFValueResultp, @C2CSHARP_TYPE_SHORT@ deepb);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_marpaESLIFValueResult_freeb(IntPtr marpaESLIFRecognizerp, IntPtr marpaESLIFValueResultp, @C2CSHARP_TYPE_SHORT@ deepb);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValue_importb(IntPtr marpaESLIFValuep, IntPtr marpaESLIFValueResultp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFRecognizer_importb(IntPtr marpaESLIFRecognizerp, IntPtr marpaESLIFValueResultp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIF_encodings(IntPtr marpaESLIFp, IntPtr bytep, @C2CSHARP_TYPE_SIZE_T@ bytel);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern void marpaESLIF_freev(IntPtr marpaESLIFp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFJSON_encode_newp(IntPtr marpaESLIFp, @C2CSHARP_TYPE_SHORT@ strictb);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFJSON_encodeb(IntPtr marpaESLIFGrammarJSONp, IntPtr marpaESLIFValueResultp, IntPtr marpaESLIFValueOptionp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFJSON_decode_newp(IntPtr marpaESLIFp, @C2CSHARP_TYPE_SHORT@ strictb);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFJSON_decodeb(IntPtr marpaESLIFGrammarJSONp, IntPtr marpaESLIFJSONDecodeOptionp, IntPtr marpaESLIFRecognizerOptionp, IntPtr marpaESLIFValueOptionp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValueResult_isinfb(IntPtr marpaESLIFp, IntPtr marpaESLIFValueResultp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValueResult_isnanb(IntPtr marpaESLIFp, IntPtr marpaESLIFValueResultp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValueResult_is_positive_nanb(IntPtr marpaESLIFp, IntPtr marpaESLIFValueResultp, ref @C2CSHARP_TYPE_SHORT@ confidencebp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFValueResult_is_negative_nanb(IntPtr marpaESLIFp, IntPtr marpaESLIFValueResultp, ref @C2CSHARP_TYPE_SHORT@ confidencebp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIF_ftos(IntPtr marpaESLIFp, @C2CSHARP_TYPE_FLOAT@ f);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIF_dtos(IntPtr marpaESLIFp, @C2CSHARP_TYPE_DOUBLE@ d);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIF_ldtos(IntPtr marpaESLIFp, @C2CSHARP_TYPE_LONG_DOUBLE@ ld);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFSymbol_string_newp(IntPtr marpaESLIFp, IntPtr stringp, IntPtr modifiers, IntPtr marpaESLIFSymbolOptionp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFSymbol_regex_newp(IntPtr marpaESLIFp, IntPtr stringp, IntPtr modifiers, IntPtr substitutionStringp, IntPtr substitutionModifiers, IntPtr marpaESLIFSymbolOptionp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFSymbol_meta_newp(IntPtr marpaESLIFp, IntPtr marpaESLIFGrammarp, IntPtr symbols, IntPtr marpaESLIFSymbolOptionp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFSymbol_meta_new_by_levelp(IntPtr marpaESLIFp, IntPtr marpaESLIFGrammarp, IntPtr symbols, @C2CSHARP_TYPE_INT@ leveli, IntPtr descp, IntPtr marpaESLIFSymbolOptionp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr marpaESLIFSymbol_eslifp(IntPtr marpaESLIFSymbolp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern @C2CSHARP_TYPE_SHORT@ marpaESLIFSymbol_tryb(IntPtr marpaESLIFSymbolp, IntPtr inputs, @C2CSHARP_TYPE_SIZE_T@ inputl, ref @C2CSHARP_TYPE_SHORT@ matchbp);
    
        [DllImport("marpaESLIF.dll", CallingConvention = CallingConvention.Cdecl)]
        public static extern void marpaESLIFSymbol_freev(IntPtr marpaESLIFSymbolp);
    }

    public class marpaESLIFOption : IDisposable
    {
        public IntPtr marpaESLIFOptionp { get; protected set; }
        private readonly genericLogger genericLogger;
        private marpaESLIFShr.marpaESLIFOption_t marpaESLIFOption_t;
        private bool disposedValue;

        public marpaESLIFOption(genericLogger genericLogger = null)
        {
            this.genericLogger = genericLogger; // Can be null

            this.marpaESLIFOption_t = new marpaESLIFShr.marpaESLIFOption_t
            {
                genericLoggerp = this.genericLogger != null ? this.genericLogger.genericLoggerp : IntPtr.Zero,
            };

            this.marpaESLIFOptionp = Marshal.AllocHGlobal(Marshal.SizeOf(marpaESLIFOption_t));
            Marshal.StructureToPtr(marpaESLIFOption_t, this.marpaESLIFOptionp, false);
        }

        protected virtual void Dispose(bool disposing)
        {
            if (!disposedValue)
            {
                if (disposing)
                {
                    // DONE: dispose managed state (managed objects)
                }

                // DONE: free unmanaged resources (unmanaged objects) and override finalizer
                this.DisposeUnmanagedResources();
                // DONE: set large fields to null
                disposedValue = true;
            }
        }

        // DONE: override finalizer only if 'Dispose(bool disposing)' has code to free unmanaged resources
        ~marpaESLIFOption()
        {
            // Do not change this code. Put cleanup code in 'Dispose(bool disposing)' method
            Dispose(disposing: false);
        }

        public void Dispose()
        {
            // Do not change this code. Put cleanup code in 'Dispose(bool disposing)' method
            Dispose(disposing: true);
            GC.SuppressFinalize(this);
        }

        private void DisposeUnmanagedResources()
        {
            if (this.marpaESLIFOptionp != IntPtr.Zero)
            {
                Marshal.FreeHGlobal(this.marpaESLIFOptionp);
                this.marpaESLIFOptionp = IntPtr.Zero;
            }
        }
    }

    public class marpaESLIF : IDisposable
    {
        public IntPtr marpaESLIFp { get; protected set;  }
        private readonly marpaESLIFOption marpaESLIFOption;
        private bool disposedValue;

        public marpaESLIF(marpaESLIFOption marpaESLIFOption = null)
        {
            this.marpaESLIFOption = marpaESLIFOption; // Can be null
            this.marpaESLIFp = marpaESLIFShr.marpaESLIF_newp(this.marpaESLIFOption != null ? this.marpaESLIFOption.marpaESLIFOptionp : IntPtr.Zero);
            if (this.marpaESLIFp == IntPtr.Zero)
            {
                throw new Exception("marpaESLIF_newp failure");
            }
        }

        protected virtual void Dispose(bool disposing)
        {
            if (!disposedValue)
            {
                if (disposing)
                {
                    // DONE: dispose managed state (managed objects)
                }

                // DONE: free unmanaged resources (unmanaged objects) and override finalizer
                this.DisposeUnmanagedResources();
                // DONE: set large fields to null
                disposedValue = true;
            }
        }

        // DONE: override finalizer only if 'Dispose(bool disposing)' has code to free unmanaged resources
        ~marpaESLIF()
        {
            // Do not change this code. Put cleanup code in 'Dispose(bool disposing)' method
            Dispose(disposing: false);
        }

        public void Dispose()
        {
            // Do not change this code. Put cleanup code in 'Dispose(bool disposing)' method
            Dispose(disposing: true);
            GC.SuppressFinalize(this);
        }

        public string Version()
        {
            IntPtr versionsp = IntPtr.Zero;
            if (marpaESLIFShr.marpaESLIF_versionb(this.marpaESLIFp, ref versionsp) == 0)
            {
                throw new Exception("marpaESLIF_versionb failure");
            }

            string version;
            if (versionsp != IntPtr.Zero)
            {
                version = Marshal.PtrToStringAnsi(versionsp);
                // No free : this is a pointer to a string owned by marpaESLIF
            }
            else
            {
                version = null;
            }

            return version;
        }

        public int VersionMajor()
        {
            @C2CSHARP_TYPE_INT@ versionMajor = 0;
            if (marpaESLIFShr.marpaESLIF_versionMajorb(this.marpaESLIFp, ref versionMajor) == 0)
            {
                throw new Exception("marpaESLIF_versionMajorb failure");
            }

            return (int)versionMajor;
        }

        public int VersionMinor()
        {
            @C2CSHARP_TYPE_INT@ versionMinor = 0;
            if (marpaESLIFShr.marpaESLIF_versionMinorb(this.marpaESLIFp, ref versionMinor) == 0)
            {
                throw new Exception("marpaESLIF_versionMinorb failure");
            }

            return (int)versionMinor;
        }

        public int VersionPatch()
        {
            @C2CSHARP_TYPE_INT@ versionPatch = 0;
            if (marpaESLIFShr.marpaESLIF_versionPatchb(this.marpaESLIFp, ref versionPatch) == 0)
            {
                throw new Exception("marpaESLIF_versionMinorb failure");
            }

            return (int)versionPatch;
        }

        public ESLIFGrammar Grammar()
        {
            IntPtr marpaESLIFGrammarp = marpaESLIFShr.marpaESLIF_grammarp(this.marpaESLIFp);
            return new ESLIFGrammar(marpaESLIFGrammarp);
        }

        private void DisposeUnmanagedResources()
        {
            if (this.marpaESLIFp != IntPtr.Zero)
            {
                marpaESLIFShr.marpaESLIF_freev(this.marpaESLIFp);
                this.marpaESLIFp = IntPtr.Zero;
            }
        }
    }

    public class marpaESLIFGrammarOption : IDisposable
    {
        public IntPtr marpaESLIFGrammarOptionp { get; protected set; }
        private readonly string grammar;
        private readonly marpaESLIFShr.marpaESLIFGrammarOption_t marpaESLIFGrammarOption_t;
        private bool disposedValue;

        public marpaESLIFGrammarOption(string grammar)
        {
            this.grammar = grammar ?? throw new ArgumentNullException(nameof(grammar));

            byte[] grammarBytes = Encoding.UTF8.GetBytes(this.grammar);
            byte[] encodingBytes = Encoding.UTF8.GetBytes("UTF-8");

            this.marpaESLIFGrammarOption_t = new marpaESLIFShr.marpaESLIFGrammarOption_t
            {
                bytep = Marshal.AllocHGlobal(grammarBytes.Length),
                bytel = (@C2CSHARP_TYPE_SIZE_T@)grammarBytes.Length,
                encodings = Marshal.AllocHGlobal(encodingBytes.Length),
                encodingl = (@C2CSHARP_TYPE_SIZE_T@)encodingBytes.Length,
            };

            Marshal.Copy(grammarBytes, 0, marpaESLIFGrammarOption_t.bytep, grammarBytes.Length);
            Marshal.Copy(encodingBytes, 0, marpaESLIFGrammarOption_t.encodings, encodingBytes.Length);

            this.marpaESLIFGrammarOptionp = Marshal.AllocHGlobal(Marshal.SizeOf(this.marpaESLIFGrammarOptionp));
            Marshal.StructureToPtr(marpaESLIFGrammarOption_t, this.marpaESLIFGrammarOptionp, false);
        }

        protected virtual void Dispose(bool disposing)
        {
            if (!disposedValue)
            {
                if (disposing)
                {
                    // DONE: dispose managed state (managed objects)
                }

                // DONE: free unmanaged resources (unmanaged objects) and override finalizer
                this.DisposeUnmanagedResources();

                // DONE: set large fields to null
                disposedValue = true;
            }
        }

        // TODO: override finalizer only if 'Dispose(bool disposing)' has code to free unmanaged resources
        ~marpaESLIFGrammarOption()
        {
            // Do not change this code. Put cleanup code in 'Dispose(bool disposing)' method
            Dispose(disposing: false);
        }

        public void Dispose()
        {
            // Do not change this code. Put cleanup code in 'Dispose(bool disposing)' method
            Dispose(disposing: true);
            GC.SuppressFinalize(this);
        }

        private void DisposeUnmanagedResources()
        {
            if (this.marpaESLIFGrammarOption_t.bytep != IntPtr.Zero)
            {
                Marshal.FreeHGlobal(this.marpaESLIFGrammarOption_t.bytep);
            }

            if (this.marpaESLIFGrammarOption_t.encodings != IntPtr.Zero)
            {
                Marshal.FreeHGlobal(this.marpaESLIFGrammarOption_t.encodings);
            }

            if (this.marpaESLIFGrammarOptionp != IntPtr.Zero)
            {
                Marshal.FreeHGlobal(this.marpaESLIFGrammarOptionp);
                this.marpaESLIFGrammarOptionp = IntPtr.Zero;
            }
        }
    }

    public class marpaESLIFGrammar : IDisposable
    {
        public IntPtr marpaESLIFGrammarp { get; protected set; }
        private readonly marpaESLIF marpaESLIF;
        private readonly bool shallow;
        private readonly marpaESLIFGrammarOption marpaESLIFGrammarOption;
        private bool disposedValue;

        public marpaESLIFGrammar(marpaESLIF marpaESLIF, marpaESLIFGrammarOption marpaESLIFGrammarOption = null)
        {
            this.marpaESLIF = marpaESLIF ?? throw new ArgumentNullException(nameof(marpaESLIF));
            this.marpaESLIFGrammarOption = marpaESLIFGrammarOption; // Can be null
            this.marpaESLIFGrammarp = marpaESLIFShr.marpaESLIFGrammar_newp(this.marpaESLIF.marpaESLIFp, this.marpaESLIFGrammarOption != null ? this.marpaESLIFGrammarOption.marpaESLIFGrammarOptionp : IntPtr.Zero);
            if (this.marpaESLIFGrammarp == IntPtr.Zero)
            {
                throw new Exception("marpaESLIFGrammar_newp failure");
            }
        }

        public marpaESLIFGrammar(IntPtr marpaESLIFGrammarp)
        {
            this.marpaESLIFGrammarp = marpaESLIFGrammarp;
            this.shallow = true;
            if (this.marpaESLIFGrammarp == IntPtr.Zero)
            {
                throw new Exception("marpaESLIFGrammar_newp failure");
            }
        }

        protected virtual void Dispose(bool disposing)
        {
            if (!disposedValue)
            {
                if (disposing)
                {
                    // DONE: dispose managed state (managed objects)
                }

                // DONE: free unmanaged resources (unmanaged objects) and override finalizer
                this.DisposeUnmanagedResources();
                // DONE: set large fields to null
                disposedValue = true;
            }
        }

        // DONE: override finalizer only if 'Dispose(bool disposing)' has code to free unmanaged resources
        ~marpaESLIFGrammar()
        {
            // Do not change this code. Put cleanup code in 'Dispose(bool disposing)' method
            Dispose(disposing: false);
        }

        public void Dispose()
        {
            // Do not change this code. Put cleanup code in 'Dispose(bool disposing)' method
            Dispose(disposing: true);
            GC.SuppressFinalize(this);
        }

        public int ngrammar()
        {
            @C2CSHARP_TYPE_INT@ ngrammar = 0;

            if (marpaESLIFShr.marpaESLIFGrammar_ngrammarib(this.marpaESLIFGrammarp, ref ngrammar) == 0)
            {
                throw new Exception("marpaESLIFGrammar_ngrammarib failure");
            }

            return (int)ngrammar;
        }

        public ESLIFGrammarDefaults Defaults()
        {
            marpaESLIFShr.marpaESLIFGrammarDefaults_t marpaESLIFGrammarDefaults_t = new marpaESLIFShr.marpaESLIFGrammarDefaults_t();
            IntPtr marpaESLIFGrammarDefaultsPtr = Marshal.AllocHGlobal(Marshal.SizeOf(marpaESLIFGrammarDefaults_t));

            if (marpaESLIFShr.marpaESLIFGrammar_defaultsb(this.marpaESLIFGrammarp, marpaESLIFGrammarDefaultsPtr) == 0)
            {
                Marshal.FreeHGlobal(marpaESLIFGrammarDefaultsPtr);
                throw new Exception("marpaESLIFGrammar_defaultsb failure");
            }

            marpaESLIFGrammarDefaults_t = (marpaESLIFShr.marpaESLIFGrammarDefaults_t) Marshal.PtrToStructure(marpaESLIFGrammarDefaultsPtr, typeof(marpaESLIFShr.marpaESLIFGrammarDefaults_t));

            ESLIFGrammarDefaults ESLIFGrammarDefaults = new ESLIFGrammarDefaults
                (
                marpaESLIFGrammarDefaults_t.defaultRuleActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarDefaults_t.defaultRuleActionp)).ESLIFAction() : null,
                marpaESLIFGrammarDefaults_t.defaultSymbolActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarDefaults_t.defaultSymbolActionp)).ESLIFAction() : null,
                marpaESLIFGrammarDefaults_t.defaultEventActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarDefaults_t.defaultEventActionp)).ESLIFAction() : null,
                marpaESLIFGrammarDefaults_t.defaultRegexActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarDefaults_t.defaultRegexActionp)).ESLIFAction() : null,
                marpaESLIFGrammarDefaults_t.defaultEncodings != IntPtr.Zero ? Marshal.PtrToStringAnsi(marpaESLIFGrammarDefaults_t.defaultEncodings) : null,
                marpaESLIFGrammarDefaults_t.fallbackEncodings != IntPtr.Zero ? Marshal.PtrToStringAnsi(marpaESLIFGrammarDefaults_t.fallbackEncodings) : null
                );

            Marshal.FreeHGlobal(marpaESLIFGrammarDefaultsPtr);
            return ESLIFGrammarDefaults;
        }

        public ESLIFGrammarDefaults DefaultsByLevel(int level)
        {
            marpaESLIFShr.marpaESLIFGrammarDefaults_t marpaESLIFGrammarDefaults_t = new marpaESLIFShr.marpaESLIFGrammarDefaults_t();
            IntPtr marpaESLIFGrammarDefaultsPtr = Marshal.AllocHGlobal(Marshal.SizeOf(marpaESLIFGrammarDefaults_t));

            if (marpaESLIFShr.marpaESLIFGrammar_defaults_by_levelb(this.marpaESLIFGrammarp, marpaESLIFGrammarDefaultsPtr, (@C2CSHARP_TYPE_INT@) level, IntPtr.Zero) == 0)
            {
                Marshal.FreeHGlobal(marpaESLIFGrammarDefaultsPtr);
                throw new Exception("marpaESLIFGrammar_defaults_by_levelb failure");
            }

            marpaESLIFGrammarDefaults_t = (marpaESLIFShr.marpaESLIFGrammarDefaults_t)Marshal.PtrToStructure(marpaESLIFGrammarDefaultsPtr, typeof(marpaESLIFShr.marpaESLIFGrammarDefaults_t));

            ESLIFGrammarDefaults ESLIFGrammarDefaults = new ESLIFGrammarDefaults
                (
                marpaESLIFGrammarDefaults_t.defaultRuleActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarDefaults_t.defaultRuleActionp)).ESLIFAction() : null,
                marpaESLIFGrammarDefaults_t.defaultSymbolActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarDefaults_t.defaultSymbolActionp)).ESLIFAction() : null,
                marpaESLIFGrammarDefaults_t.defaultEventActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarDefaults_t.defaultEventActionp)).ESLIFAction() : null,
                marpaESLIFGrammarDefaults_t.defaultRegexActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarDefaults_t.defaultRegexActionp)).ESLIFAction() : null,
                marpaESLIFGrammarDefaults_t.defaultEncodings != IntPtr.Zero ? Marshal.PtrToStringAnsi(marpaESLIFGrammarDefaults_t.defaultEncodings) : null,
                marpaESLIFGrammarDefaults_t.fallbackEncodings != IntPtr.Zero ? Marshal.PtrToStringAnsi(marpaESLIFGrammarDefaults_t.fallbackEncodings) : null
                );

            Marshal.FreeHGlobal(marpaESLIFGrammarDefaultsPtr);
            return ESLIFGrammarDefaults;
        }

        public string RuleDisplay(int rule)
        {
            IntPtr ruledisplaysPtr = IntPtr.Zero;
            if (marpaESLIFShr.marpaESLIFGrammar_ruledisplayform_currentb(this.marpaESLIFGrammarp, (@C2CSHARP_TYPE_INT@)rule, ref ruledisplaysPtr) == 0)
            {
                throw new Exception("marpaESLIFGrammar_ruledisplayform_currentb failure");
            }

            return ruledisplaysPtr == IntPtr.Zero ? null : Marshal.PtrToStringAnsi(ruledisplaysPtr);
        }

        public string RuleDisplayByLevel(int rule, int level)
        {
            IntPtr ruledisplaysPtr = IntPtr.Zero;
            if (marpaESLIFShr.marpaESLIFGrammar_ruledisplayform_by_levelb(this.marpaESLIFGrammarp, (@C2CSHARP_TYPE_INT@)rule, ref ruledisplaysPtr, level, IntPtr.Zero) == 0)
            {
                throw new Exception("marpaESLIFGrammar_ruledisplayform_by_levelb failure");
            }

            return ruledisplaysPtr == IntPtr.Zero ? null : Marshal.PtrToStringAnsi(ruledisplaysPtr);
        }

        public string RuleShow(int rule)
        {
            IntPtr ruleshowsPtr = IntPtr.Zero;
            if (marpaESLIFShr.marpaESLIFGrammar_ruleshowform_currentb(this.marpaESLIFGrammarp, (@C2CSHARP_TYPE_INT@)rule, ref ruleshowsPtr) == 0)
            {
                throw new Exception("marpaESLIFGrammar_ruleshowform_currentb failure");
            }

            return ruleshowsPtr == IntPtr.Zero ? null : Marshal.PtrToStringAnsi(ruleshowsPtr);
        }

        public string RuleShowByLevel(int rule, int level)
        {
            IntPtr ruleshowsPtr = IntPtr.Zero;
            if (marpaESLIFShr.marpaESLIFGrammar_ruleshowform_by_levelb(this.marpaESLIFGrammarp, (@C2CSHARP_TYPE_INT@)rule, ref ruleshowsPtr, level, IntPtr.Zero) == 0)
            {
                throw new Exception("marpaESLIFGrammar_ruleshowform_by_levelb failure");
            }

            return ruleshowsPtr == IntPtr.Zero ? null : Marshal.PtrToStringAnsi(ruleshowsPtr);
        }

        private ESLIFGrammarRuleProperties marpaESLIFRulePropertyToESLIFGrammarRuleProperties(marpaESLIFShr.marpaESLIFRuleProperty_t marpaESLIFRuleProperty_t)
        {
            int[] rhsIds = null;
            if (marpaESLIFRuleProperty_t.nrhsl > 0 && marpaESLIFRuleProperty_t.rhsip!= IntPtr.Zero)
            {
                int[] _rhsIds = new int[(int)marpaESLIFRuleProperty_t.nrhsl];
                Marshal.Copy(marpaESLIFRuleProperty_t.rhsip, _rhsIds, 0, (int)marpaESLIFRuleProperty_t.nrhsl);
#if C2CSHARP_TYPE_INT_IS_INT
                rhsIds = _rhsIds;
#else
                rhsIds = _rhsIds.Select(i => (int)i).ToArray();
#endif
            }

            bool[] skip = null;
            if (marpaESLIFRuleProperty_t.nrhsl > 0 && marpaESLIFRuleProperty_t.skipbp != IntPtr.Zero)
            {
                @C2CSHARP_TYPE_SHORT@[] _skip = new @C2CSHARP_TYPE_SHORT@[(int)marpaESLIFRuleProperty_t.nrhsl];
                Marshal.Copy(marpaESLIFRuleProperty_t.skipbp, _skip, 0, (int)marpaESLIFRuleProperty_t.nrhsl);
                skip = _skip.Select(s => s != 0).ToArray();
            }

            return new ESLIFGrammarRuleProperties
                ((int)marpaESLIFRuleProperty_t.idi,
                marpaESLIFString.marpaESLIFStringPtrToString(marpaESLIFRuleProperty_t.descp),
                marpaESLIFRuleProperty_t.asciishows != IntPtr.Zero ? Marshal.PtrToStringAnsi(marpaESLIFRuleProperty_t.asciishows) : null,
                (int)marpaESLIFRuleProperty_t.lhsi,
                (int)marpaESLIFRuleProperty_t.separatori,
                rhsIds,
                skip,
                (int)marpaESLIFRuleProperty_t.exceptioni,
                marpaESLIFRuleProperty_t.actionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFRuleProperty_t.actionp)).ESLIFAction() : null,
                marpaESLIFRuleProperty_t.discardEvents != IntPtr.Zero ? Marshal.PtrToStringAnsi(marpaESLIFRuleProperty_t.discardEvents) : null,
                marpaESLIFRuleProperty_t.discardEventb != 0,
                (int)marpaESLIFRuleProperty_t.ranki,
                marpaESLIFRuleProperty_t.nullRanksHighb != 0,
                marpaESLIFRuleProperty_t.sequenceb != 0,
                marpaESLIFRuleProperty_t.properb != 0,
                (int)marpaESLIFRuleProperty_t.minimumi,
                (int)marpaESLIFRuleProperty_t.propertyBitSet,
                marpaESLIFRuleProperty_t.hideseparatorb != 0
                );
        }

        private ESLIFGrammarProperties marpaESLIFGrammarPropertyToESLIFGrammarProperties(marpaESLIFShr.marpaESLIFGrammarProperty_t marpaESLIFGrammarProperty_t)
        {
            int[] symbolIds = null;
            if(marpaESLIFGrammarProperty_t.nsymboll > 0 && marpaESLIFGrammarProperty_t.symbolip != IntPtr.Zero)
            {
                @C2CSHARP_TYPE_INT@[] _symbolIds = new @C2CSHARP_TYPE_INT@[(int)marpaESLIFGrammarProperty_t.nsymboll];
                Marshal.Copy(marpaESLIFGrammarProperty_t.symbolip, _symbolIds, 0, (int)marpaESLIFGrammarProperty_t.nsymboll);
#if C2CSHARP_TYPE_INT_IS_INT
                symbolIds = _symbolIds;
#else
                symbolIds = _symbolIds.Select(i => (int)i).ToArray();
#endif
            }

            int[] ruleIds = null;
            if (marpaESLIFGrammarProperty_t.nrulel > 0 && marpaESLIFGrammarProperty_t.ruleip != IntPtr.Zero)
            {
                @C2CSHARP_TYPE_INT@[] _ruleIds = new @C2CSHARP_TYPE_INT@[(int)marpaESLIFGrammarProperty_t.nrulel] ;
                Marshal.Copy(marpaESLIFGrammarProperty_t.ruleip, _ruleIds, 0, (int)marpaESLIFGrammarProperty_t.nrulel);
#if C2CSHARP_TYPE_INT_IS_INT
                ruleIds = _ruleIds;
#else
                ruleIds = _ruleIds.Select(i => (int)i).ToArray();
#endif
            }

            return new ESLIFGrammarProperties
                ((int)marpaESLIFGrammarProperty_t.leveli,
                (int)marpaESLIFGrammarProperty_t.maxLeveli,
                marpaESLIFString.marpaESLIFStringPtrToString(marpaESLIFGrammarProperty_t.descp),
                marpaESLIFGrammarProperty_t.latmb != 0,
                marpaESLIFGrammarProperty_t.discardIsFallbackb != 0,
                marpaESLIFGrammarProperty_t.defaultSymbolActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarProperty_t.defaultSymbolActionp)).ESLIFAction() : null,
                marpaESLIFGrammarProperty_t.defaultRuleActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarProperty_t.defaultRuleActionp)).ESLIFAction() : null,
                marpaESLIFGrammarProperty_t.defaultEventActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarProperty_t.defaultEventActionp)).ESLIFAction() : null,
                marpaESLIFGrammarProperty_t.defaultRegexActionp != IntPtr.Zero ? (new marpaESLIFAction(marpaESLIFGrammarProperty_t.defaultRegexActionp)).ESLIFAction() : null,
                (int)marpaESLIFGrammarProperty_t.starti,
                (int)marpaESLIFGrammarProperty_t.discardi,
                symbolIds,
                ruleIds,
                marpaESLIFGrammarProperty_t.defaultEncodings != IntPtr.Zero ? Marshal.PtrToStringAnsi(marpaESLIFGrammarProperty_t.defaultEncodings) : null,
                marpaESLIFGrammarProperty_t.fallbackEncodings != IntPtr.Zero ? Marshal.PtrToStringAnsi(marpaESLIFGrammarProperty_t.fallbackEncodings) : null
                );
        }

        public ESLIFGrammarProperties Properties()
        {
            marpaESLIFShr.marpaESLIFGrammarProperty_t marpaESLIFGrammarProperty_t = new marpaESLIFShr.marpaESLIFGrammarProperty_t();
            IntPtr marpaESLIFGrammarPropertyPtr = Marshal.AllocHGlobal(Marshal.SizeOf(marpaESLIFGrammarProperty_t));

            if (marpaESLIFShr.marpaESLIFGrammar_grammarproperty_currentb(this.marpaESLIFGrammarp, marpaESLIFGrammarPropertyPtr) == 0)
            {
                Marshal.FreeHGlobal(marpaESLIFGrammarPropertyPtr);
                throw new Exception("marpaESLIFGrammar_grammarproperty_currentb failure");
            }

            marpaESLIFGrammarProperty_t = (marpaESLIFShr.marpaESLIFGrammarProperty_t)Marshal.PtrToStructure(marpaESLIFGrammarPropertyPtr, typeof(marpaESLIFShr.marpaESLIFGrammarProperty_t));
            ESLIFGrammarProperties ESLIFGrammarProperties = marpaESLIFGrammarPropertyToESLIFGrammarProperties(marpaESLIFGrammarProperty_t);
            Marshal.FreeHGlobal(marpaESLIFGrammarPropertyPtr);

            return ESLIFGrammarProperties;
        }

        public ESLIFGrammarProperties PropertiesByLevel(int level)
        {
            marpaESLIFShr.marpaESLIFGrammarProperty_t marpaESLIFGrammarProperty_t = new marpaESLIFShr.marpaESLIFGrammarProperty_t();
            IntPtr marpaESLIFGrammarPropertyPtr = Marshal.AllocHGlobal(Marshal.SizeOf(marpaESLIFGrammarProperty_t));

            if (marpaESLIFShr.marpaESLIFGrammar_grammarproperty_by_levelb(this.marpaESLIFGrammarp, marpaESLIFGrammarPropertyPtr, (@C2CSHARP_TYPE_INT@)level, IntPtr.Zero) == 0)
            {
                Marshal.FreeHGlobal(marpaESLIFGrammarPropertyPtr);
                throw new Exception("marpaESLIFGrammar_grammarproperty_currentb failure");
            }

            marpaESLIFGrammarProperty_t = (marpaESLIFShr.marpaESLIFGrammarProperty_t)Marshal.PtrToStructure(marpaESLIFGrammarPropertyPtr, typeof(marpaESLIFShr.marpaESLIFGrammarProperty_t));
            ESLIFGrammarProperties ESLIFGrammarProperties = marpaESLIFGrammarPropertyToESLIFGrammarProperties(marpaESLIFGrammarProperty_t);
            Marshal.FreeHGlobal(marpaESLIFGrammarPropertyPtr);

            return ESLIFGrammarProperties;
        }

        public ESLIFGrammarRuleProperties RuleProperties(int rule)
        {
            marpaESLIFShr.marpaESLIFRuleProperty_t marpaESLIFRuleProperty_t = new marpaESLIFShr.marpaESLIFRuleProperty_t();
            IntPtr marpaESLIFRulePropertyPtr = Marshal.AllocHGlobal(Marshal.SizeOf(marpaESLIFRuleProperty_t));

            if (marpaESLIFShr.marpaESLIFGrammar_ruleproperty_currentb(this.marpaESLIFGrammarp, (int)rule, marpaESLIFRulePropertyPtr) == 0)
            {
                Marshal.FreeHGlobal(marpaESLIFRulePropertyPtr);
                throw new Exception("marpaESLIFGrammar_ruleproperty_currentb failure");
            }

            marpaESLIFRuleProperty_t = (marpaESLIFShr.marpaESLIFRuleProperty_t)Marshal.PtrToStructure(marpaESLIFRulePropertyPtr, typeof(marpaESLIFShr.marpaESLIFRuleProperty_t));
            ESLIFGrammarRuleProperties ESLIFGrammarRuleProperties = marpaESLIFRulePropertyToESLIFGrammarRuleProperties(marpaESLIFRuleProperty_t);
            Marshal.FreeHGlobal(marpaESLIFRulePropertyPtr);

            return ESLIFGrammarRuleProperties;
        }

        public ESLIFGrammarRuleProperties RulePropertiesByLevel(int rule, int level)
        {
            marpaESLIFShr.marpaESLIFRuleProperty_t marpaESLIFRuleProperty_t = new marpaESLIFShr.marpaESLIFRuleProperty_t();
            IntPtr marpaESLIFRulePropertyPtr = Marshal.AllocHGlobal(Marshal.SizeOf(marpaESLIFRuleProperty_t));

            if (marpaESLIFShr.marpaESLIFGrammar_ruleproperty_by_levelb(this.marpaESLIFGrammarp, (int)rule, marpaESLIFRulePropertyPtr, (int)level, IntPtr.Zero) == 0)
            {
                Marshal.FreeHGlobal(marpaESLIFRulePropertyPtr);
                throw new Exception("marpaESLIFGrammar_ruleproperty_by_levelb failure");
            }

            marpaESLIFRuleProperty_t = (marpaESLIFShr.marpaESLIFRuleProperty_t)Marshal.PtrToStructure(marpaESLIFRulePropertyPtr, typeof(marpaESLIFShr.marpaESLIFRuleProperty_t));
            ESLIFGrammarRuleProperties ESLIFGrammarRuleProperties = marpaESLIFRulePropertyToESLIFGrammarRuleProperties(marpaESLIFRuleProperty_t);
            Marshal.FreeHGlobal(marpaESLIFRulePropertyPtr);

            return ESLIFGrammarRuleProperties;
        }

        private void DisposeUnmanagedResources()
        {
            if (! this.shallow && this.marpaESLIFGrammarp != IntPtr.Zero)
            {
                marpaESLIFShr.marpaESLIFGrammar_freev(this.marpaESLIFGrammarp);
            }
        }
    }

    public static class marpaESLIFString
    {
        public static string marpaESLIFStringPtrToString(IntPtr marpaESLIFStringPtr)
        {
            if (marpaESLIFStringPtr == IntPtr.Zero)
            {
                return null;
            }

            marpaESLIFShr.marpaESLIFString_t marpaESLIFString_t = new marpaESLIFShr.marpaESLIFString_t();
            Marshal.StructureToPtr(marpaESLIFString_t, marpaESLIFStringPtr, false);

            if (marpaESLIFString_t.bytep != IntPtr.Zero && marpaESLIFString_t.bytel > 0 && marpaESLIFString_t.encodingasciis != null)
            {
                byte[] bytes = new byte[marpaESLIFString_t.bytel];
                Marshal.Copy(marpaESLIFString_t.bytep, bytes, 0, (int)marpaESLIFString_t.bytel);

                string encodingAscii = Marshal.PtrToStringAnsi(marpaESLIFString_t.encodingasciis);

                if (encodingAscii == "ASCII")
                {
                    return Encoding.ASCII.GetString(bytes);
                }

                if (encodingAscii == "UTF-7")
                {
                    return Encoding.UTF7.GetString(bytes);
                }

                if (encodingAscii == "UTF-8")
                {
                    return Encoding.UTF8.GetString(bytes);
                }

                if (encodingAscii == "UTF-16LE")
                {
                    return Encoding.Unicode.GetString(bytes);
                }

                if (encodingAscii == "UTF-16BE")
                {
                    return Encoding.BigEndianUnicode.GetString(bytes);
                }

                if (encodingAscii == "UTF-32LE")
                {
                    return Encoding.UTF32.GetString(bytes);
                }
            }

            if (marpaESLIFString_t.asciis != IntPtr.Zero)
            {
                return Marshal.PtrToStringAnsi(marpaESLIFString_t.asciis);
            }

            return null;
        }
    }

    public class marpaESLIFLuaFunction
    {
        public string luas { get; protected set; }
        public string actions { get; protected set; }
        public bool luacb { get; protected set; }
        public byte[] luacp { get; protected set; }
        public byte[] luacstripp { get; protected set; }

        public marpaESLIFLuaFunction(marpaESLIFShr.marpaESLIFLuaFunction_t marpaESLIFLuaFunction_t)
        {
            this.luas = marpaESLIFLuaFunction_t.luas == IntPtr.Zero ? null : Marshal.PtrToStringAnsi(marpaESLIFLuaFunction_t.luas);
            this.actions = marpaESLIFLuaFunction_t.actions == IntPtr.Zero ? null : Marshal.PtrToStringAnsi(marpaESLIFLuaFunction_t.actions);
            this.luacb = marpaESLIFLuaFunction_t.luacb == 0 ? false : true;
            if (marpaESLIFLuaFunction_t.luacp != IntPtr.Zero && marpaESLIFLuaFunction_t.luacl > 0)
            {
                this.luacp = new byte[marpaESLIFLuaFunction_t.luacl];
                Marshal.Copy(marpaESLIFLuaFunction_t.luacp, this.luacp, 0, (int)marpaESLIFLuaFunction_t.luacl);
            }
            else
            {
                this.luacp = null;
            }
            if (marpaESLIFLuaFunction_t.luacstripp != IntPtr.Zero && marpaESLIFLuaFunction_t.luacstripl > 0)
            {
                this.luacstripp = new byte[marpaESLIFLuaFunction_t.luacstripl];
                Marshal.Copy(marpaESLIFLuaFunction_t.luacstripp, this.luacstripp, 0, (int)marpaESLIFLuaFunction_t.luacstripl);
            }
            else
            {
                this.luacstripp = null;
            }
        }

        public ESLIFLuaFunction ESLIFLuaFunction()
        {
            return new ESLIFLuaFunction
                (
                this.luas,
                this.actions,
                this.luacb,
                this.luacp,
                this.luacstripp
                );
        }
    }

    public class marpaESLIFAction {
        public marpaESLIFShr.marpaESLIFActionType_t type { get; protected set; }
        public string names { get; protected set; }
        public string @string { get; protected set; }
        public string luas { get; protected set; }
        public marpaESLIFLuaFunction luaFunction { get; protected set; }

        public marpaESLIFAction(IntPtr marpaESLIFActionPtr)
        {
            marpaESLIFShr.marpaESLIFAction_t marpaESLIFAction_t = (marpaESLIFShr.marpaESLIFAction_t)Marshal.PtrToStructure(marpaESLIFActionPtr, typeof(marpaESLIFShr.marpaESLIFAction_t));

            switch (marpaESLIFAction_t.type)
            {
                case marpaESLIFShr.marpaESLIFActionType_t.MARPAESLIF_ACTION_TYPE_NAME:
                    this.type = marpaESLIFAction_t.type;
                    this.names = marpaESLIFAction_t.names != IntPtr.Zero ? Marshal.PtrToStringAnsi(marpaESLIFAction_t.names) : null;
                    break;
                case marpaESLIFShr.marpaESLIFActionType_t.MARPAESLIF_ACTION_TYPE_STRING:
                    this.type = marpaESLIFAction_t.type;
                    this.@string = marpaESLIFString.marpaESLIFStringPtrToString(marpaESLIFAction_t.stringp);
                    break;
                case marpaESLIFShr.marpaESLIFActionType_t.MARPAESLIF_ACTION_TYPE_LUA:
                    this.type = marpaESLIFAction_t.type;
                    this.luas = marpaESLIFAction_t.luas != IntPtr.Zero ? Marshal.PtrToStringAnsi(marpaESLIFAction_t.luas) : null;
                    break;
                case marpaESLIFShr.marpaESLIFActionType_t.MARPAESLIF_ACTION_TYPE_LUA_FUNCTION:
                    this.type = marpaESLIFAction_t.type;
                    this.luaFunction = new marpaESLIFLuaFunction(marpaESLIFAction_t.luaFunction);
                    break;
                default:
                    throw new Exception($"Invalid marpaESLIFActionType_t {(int)marpaESLIFAction_t.type}");
            }
        }

        public ESLIFAction ESLIFAction()
        {
            switch (this.type)
            {
                case marpaESLIFShr.marpaESLIFActionType_t.MARPAESLIF_ACTION_TYPE_NAME:
                    return new ESLIFAction(ESLIFActionType.NAME, this.names, null, null, null);
                case marpaESLIFShr.marpaESLIFActionType_t.MARPAESLIF_ACTION_TYPE_STRING:
                    return new ESLIFAction(ESLIFActionType.STRING, null, this.@string, null, null);
                case marpaESLIFShr.marpaESLIFActionType_t.MARPAESLIF_ACTION_TYPE_LUA:
                    return new ESLIFAction(ESLIFActionType.LUA, null, null, this.luas, null);
                case marpaESLIFShr.marpaESLIFActionType_t.MARPAESLIF_ACTION_TYPE_LUA_FUNCTION:
                    return new ESLIFAction(ESLIFActionType.LUAFUNCTION, null, null, null, this.luaFunction.ESLIFLuaFunction());
                default:
                    throw new Exception($"Invalid marpaESLIFActionType_t {(int)this.type}");
            }
        }
    }
}
