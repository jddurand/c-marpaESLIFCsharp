#cmakedefine MARPAESLIF_HAVE_LONG_LONG
#cmakedefine C2CSHARP_TYPE_INT_IS_INT
using System;
using System.Runtime.InteropServices;

namespace org.parser.marpa
{
    public class marpaESLIFRecognizer : IDisposable
    {
        public IntPtr marpaESLIFRecognizerp { get; protected set; }
        private readonly marpaESLIFGrammar marpaESLIFGrammar;
        private readonly bool shallow;
        private readonly marpaESLIFRecognizerOption marpaESLIFRecognizerOption;
        private object Lock = new object();
        private bool disposedValue;

        public marpaESLIFRecognizer(marpaESLIFGrammar marpaESLIFGrammar, marpaESLIFRecognizerOption marpaESLIFRecognizerOption = null)
        {
            this.marpaESLIFGrammar = marpaESLIFGrammar ?? throw new ArgumentNullException(nameof(marpaESLIFGrammar));
            this.marpaESLIFRecognizerOption = marpaESLIFRecognizerOption; // Can be null
            this.marpaESLIFRecognizerp = marpaESLIFShr.marpaESLIFRecognizer_newp(this.marpaESLIFGrammar.marpaESLIFGrammarp, this.marpaESLIFRecognizerOption != null ? this.marpaESLIFRecognizerOption.marpaESLIFRecognizerOptionp: IntPtr.Zero);
            if (this.marpaESLIFRecognizerp == IntPtr.Zero)
            {
                throw new ESLIFException("marpaESLIFRecognizer_newp failure");
            }
        }

        public marpaESLIFRecognizer(marpaESLIFGrammar marpaESLIFGrammar, marpaESLIFRecognizer marpaESLIFRecognizerFrom)
        {
            this.marpaESLIFRecognizerp = marpaESLIFShr.marpaESLIFRecognizer_newFromp(this.marpaESLIFGrammar.marpaESLIFGrammarp, marpaESLIFRecognizerFrom.marpaESLIFRecognizerp);
            if (this.marpaESLIFRecognizerp == IntPtr.Zero)
            {
                throw new ESLIFException("marpaESLIFRecognizer_newFromp failure");
            }
        }

        public void SetExhaustedFlag(bool onOff)
        {
            if (marpaESLIFShr.marpaESLIFRecognizer_set_exhausted_flagb(this.marpaESLIFRecognizerp, (@C2CSHARP_TYPE_SHORT@) (onOff ? 1 : 0)) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_set_exhausted_flagb failure");
            }
        }

        public bool IsExhausted()
        {
            @C2CSHARP_TYPE_SHORT@ isExhaustedb = 0;

            if (marpaESLIFShr.marpaESLIFRecognizer_isExhaustedb(this.marpaESLIFRecognizerp, ref isExhaustedb) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_isExhaustedb failure");
            }

            return isExhaustedb != 0;
        }

        public bool IsCanContinue()
        {
            @C2CSHARP_TYPE_SHORT@ isCanContinueb = 0;

            if (marpaESLIFShr.marpaESLIFRecognizer_isCanContinueb(this.marpaESLIFRecognizerp, ref isCanContinueb) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_isCanContinueb failure");
            }

            return isCanContinueb != 0;
        }

        public void Share(marpaESLIFRecognizer marpaESLIFRecognizerShared)
        {
            if (marpaESLIFShr.marpaESLIFRecognizer_shareb(this.marpaESLIFRecognizerp, marpaESLIFRecognizerShared.marpaESLIFRecognizerp) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_shareb failure");
            }
        }

        public void Unshare()
        {
            if (marpaESLIFShr.marpaESLIFRecognizer_shareb(this.marpaESLIFRecognizerp, IntPtr.Zero) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_shareb failure");
            }
        }

        public void Peek(marpaESLIFRecognizer marpaESLIFRecognizerPeeked)
        {
            if (marpaESLIFShr.marpaESLIFRecognizer_peekb(this.marpaESLIFRecognizerp, marpaESLIFRecognizerPeeked.marpaESLIFRecognizerp) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_peekb failure");
            }
        }

        public void Unpeek()
        {
            if (marpaESLIFShr.marpaESLIFRecognizer_peekb(this.marpaESLIFRecognizerp, IntPtr.Zero) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_peekb failure");
            }
        }

        public bool Alternative(string name, object value, int grammarLength = 1)
        {
            IntPtr names = Marshal.StringToHGlobalAnsi(name);
            IntPtr marpaESLIFValueResultp = ImportExport.Instance.Exporter(value);
            IntPtr marpaESLIFAlternativep = marpaESLIF_wrapperShr.marpaESLIFAlternativep(names, marpaESLIFValueResultp, (@C2CSHARP_TYPE_SIZE_T@) grammarLength);

            bool output = marpaESLIFShr.marpaESLIFRecognizer_alternativeb(this.marpaESLIFRecognizerp, marpaESLIFAlternativep) != 0;

            marpaESLIF_wrapperShr.marpaESLIF_free(marpaESLIFAlternativep);
            marpaESLIFShr.marpaESLIFRecognizer_marpaESLIFValueResult_freeb(this.marpaESLIFRecognizerp, marpaESLIFValueResultp, (@C2CSHARP_TYPE_SHORT@) 1);
            Marshal.FreeHGlobal(names);

            return output;
        }

        public bool AlternativeComplete(int length)
        {
            return marpaESLIFShr.marpaESLIFRecognizer_alternative_completeb(this.marpaESLIFRecognizerp, (@C2CSHARP_TYPE_SIZE_T@) length) != 0;
        }

        public bool AlternativeRead(string name, object value, int length, int grammarLength)
        {
            IntPtr names = Marshal.StringToHGlobalAnsi(name);
            IntPtr marpaESLIFValueResultp = ImportExport.Instance.Exporter(value);
            IntPtr marpaESLIFAlternativep = marpaESLIF_wrapperShr.marpaESLIFAlternativep(names, marpaESLIFValueResultp, (@C2CSHARP_TYPE_SIZE_T@) grammarLength);

            bool output = marpaESLIFShr.marpaESLIFRecognizer_alternative_readb(this.marpaESLIFRecognizerp, marpaESLIFAlternativep, (@C2CSHARP_TYPE_SIZE_T@) length) != 0;

            marpaESLIF_wrapperShr.marpaESLIF_free(marpaESLIFAlternativep);
            marpaESLIFShr.marpaESLIFRecognizer_marpaESLIFValueResult_freeb(this.marpaESLIFRecognizerp, marpaESLIFValueResultp, (@C2CSHARP_TYPE_SHORT@) 1);
            Marshal.FreeHGlobal(names);

            return output;
        }

        public bool Scan(bool initialEventsb)
        {
            @C2CSHARP_TYPE_SHORT@ continuebp = 0;
            @C2CSHARP_TYPE_SHORT@ exhaustedbp = 0;

            return marpaESLIFShr.marpaESLIFRecognizer_scanb(this.marpaESLIFRecognizerp, (@C2CSHARP_TYPE_SHORT@) (initialEventsb ? 1 : 0), ref continuebp, ref exhaustedbp) != 0;
        }


        public bool Scan(bool initialEventsb, ref bool isCanContinue, ref bool isExhausted)
        {
            @C2CSHARP_TYPE_SHORT@ continuebp = 0;
            @C2CSHARP_TYPE_SHORT@ exhaustedbp = 0;

            bool output = marpaESLIFShr.marpaESLIFRecognizer_scanb(this.marpaESLIFRecognizerp, (@C2CSHARP_TYPE_SHORT@) (initialEventsb ? 1 : 0), ref continuebp, ref exhaustedbp) != 0;
            if (output)
            {
                isCanContinue = continuebp != 0;
                isExhausted = exhaustedbp != 0;
            }

            return output;
        }

        public bool Resume(int deltaLengthl)
        {
            @C2CSHARP_TYPE_SHORT@ continuebp = 0;
            @C2CSHARP_TYPE_SHORT@ exhaustedbp = 0;

            return marpaESLIFShr.marpaESLIFRecognizer_resumeb(this.marpaESLIFRecognizerp, (@C2CSHARP_TYPE_SIZE_T@) deltaLengthl, ref continuebp, ref exhaustedbp) != 0;
        }

        public bool Resume(int deltaLengthl, ref bool isCanContinue, ref bool isExhausted)
        {
            @C2CSHARP_TYPE_SHORT@ continuebp = 0;
            @C2CSHARP_TYPE_SHORT@ exhaustedbp = 0;

            bool output = marpaESLIFShr.marpaESLIFRecognizer_resumeb(this.marpaESLIFRecognizerp, (@C2CSHARP_TYPE_SIZE_T@) deltaLengthl, ref continuebp, ref exhaustedbp) != 0;
            if (output)
            {
                isCanContinue = continuebp != 0;
                isExhausted = exhaustedbp != 0;
            }

            return output;
        }

        public bool TryName(string name)
        {
            IntPtr names = Marshal.StringToHGlobalAnsi(name);
            @C2CSHARP_TYPE_SHORT@ matchb = 0;

            if (marpaESLIFShr.marpaESLIFRecognizer_name_tryb(this.marpaESLIFRecognizerp, names, ref matchb) == 0)
            {
                Marshal.FreeHGlobal(names);
                throw new ESLIFException("marpaESLIFRecognizer_name_tryb failure");
            }

            Marshal.FreeHGlobal(names);

            return matchb != 0;
        }

        public int Discard()
        {
            @C2CSHARP_TYPE_SIZE_T@ discardl = 0;

            if (marpaESLIFShr.marpaESLIFRecognizer_discardb(this.marpaESLIFRecognizerp, ref discardl) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_discardb failure");
            }

            return (int) discardl;
        }

        public bool TryDiscard()
        {
            @C2CSHARP_TYPE_SHORT@ matchb = 0;

            if (marpaESLIFShr.marpaESLIFRecognizer_discard_tryb(this.marpaESLIFRecognizerp, ref matchb) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_discard_tryb failure");
            }

            return matchb != 0;
        }

        public string[] ExpectedNames()
        {
            @C2CSHARP_TYPE_SIZE_T@ nNamel = 0;
            IntPtr namesArrayp = IntPtr.Zero;

            if (marpaESLIFShr.marpaESLIFRecognizer_name_expectedb(this.marpaESLIFRecognizerp, ref nNamel, ref namesArrayp) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_name_expectedb failure");
            }

            if (nNamel <= 0)
            {
                return new string[0];
            }

            IntPtr[] ptrs = new IntPtr[(int) nNamel];
            Marshal.Copy(namesArrayp, ptrs, 0, (int)nNamel);

            string[] output = new string[(int) nNamel];
            for (int i = 0; i < (int) nNamel; i++)
            {
                output[i] = Marshal.PtrToStringAnsi(ptrs[i]);
            }

            return output;
        }

        public byte[] LastPauseName(string name)
        {
            @C2CSHARP_TYPE_SIZE_T@ pausel = 0;
            IntPtr pauses = IntPtr.Zero;
            IntPtr names = Marshal.StringToHGlobalAnsi(name);

            if (marpaESLIFShr.marpaESLIFRecognizer_name_last_pauseb(this.marpaESLIFRecognizerp, names, ref pauses, ref pausel) == 0)
            {
                Marshal.FreeHGlobal(names);
                // throw new ESLIFException("marpaESLIFRecognizer_name_last_pauseb failure");
                return null;
            }

            Marshal.FreeHGlobal(names);

            if (pauses == IntPtr.Zero || pausel <= 0)
            {
                return new byte[0];
            }

            byte[] output = new byte[(int) pausel];
            Marshal.Copy(pauses, output, 0, (int) pauses);

            return output;
        }

        public byte[] LastTryName(string name)
        {
            @C2CSHARP_TYPE_SIZE_T@ tryl = 0;
            IntPtr trys = IntPtr.Zero;
            IntPtr names = Marshal.StringToHGlobalAnsi(name);

            if (marpaESLIFShr.marpaESLIFRecognizer_name_last_tryb(this.marpaESLIFRecognizerp, names, ref trys, ref tryl) == 0)
            {
                Marshal.FreeHGlobal(names);
                // throw new ESLIFException("marpaESLIFRecognizer_name_last_tryb failure");
                return null;
            }

            Marshal.FreeHGlobal(names);

            if (trys == IntPtr.Zero || tryl <= 0)
            {
                return new byte[0];
            }

            byte[] output = new byte[(int) tryl];
            Marshal.Copy(trys, output, 0, (int) trys);

            return output;
        }

        public byte[] LastDiscard()
        {
            @C2CSHARP_TYPE_SIZE_T@ lastl = 0;
            IntPtr lasts = IntPtr.Zero;

            if (marpaESLIFShr.marpaESLIFRecognizer_discard_lastb(this.marpaESLIFRecognizerp, ref lasts, ref lastl) == 0)
            {
                // throw new ESLIFException("marpaESLIFRecognizer_discard_lastb failure");
                return null;
            }

            if (lasts == IntPtr.Zero || lastl <= 0)
            {
                return new byte[0];
            }

            byte[] output = new byte[(int) lastl];
            Marshal.Copy(lasts, output, 0, (int) lasts);

            return output;
        }

        public bool IsEof()
        {
            @C2CSHARP_TYPE_SHORT@ eofb = 0;

            if (marpaESLIFShr.marpaESLIFRecognizer_isEofb(this.marpaESLIFRecognizerp, ref eofb) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_isEofb failure");
            }

            return eofb != 0;
        }

        public bool IsStartComplete()
        {
            @C2CSHARP_TYPE_SHORT@ completeb = 0;

            if (marpaESLIFShr.marpaESLIFRecognizer_isStartCompleteb(this.marpaESLIFRecognizerp, ref completeb) == 0)
            {
                throw new ESLIFException("marpaESLIFRecognizer_isStartCompleteb failure");
            }

            return completeb != 0;
        }

        public bool EventOnOff(string symbol, ESLIFEventType eventType, bool onOff)
        {
            IntPtr symbols = Marshal.StringToHGlobalAnsi(symbol);
            marpaESLIFShr.marpaESLIFEventType_t eventSeti = 0;
            @C2CSHARP_TYPE_SHORT@ onoffb = (@C2CSHARP_TYPE_SHORT@) (onOff ? 1 : 0);
            bool output;

            if ((eventType & ESLIFEventType.COMPLETED) == ESLIFEventType.COMPLETED)
            {
                eventSeti &= marpaESLIFShr.marpaESLIFEventType_t.MARPAESLIF_EVENTTYPE_COMPLETED;
            }

            if ((eventType & ESLIFEventType.NULLED) == ESLIFEventType.NULLED)
            {
                eventSeti &= marpaESLIFShr.marpaESLIFEventType_t.MARPAESLIF_EVENTTYPE_NULLED;
            }

            if ((eventType & ESLIFEventType.PREDICTED) == ESLIFEventType.PREDICTED)
            {
                eventSeti &= marpaESLIFShr.marpaESLIFEventType_t.MARPAESLIF_EVENTTYPE_PREDICTED;
            }

            if ((eventType & ESLIFEventType.BEFORE) == ESLIFEventType.BEFORE)
            {
                eventSeti &= marpaESLIFShr.marpaESLIFEventType_t.MARPAESLIF_EVENTTYPE_BEFORE;
            }

            if ((eventType & ESLIFEventType.AFTER) == ESLIFEventType.AFTER)
            {
                eventSeti &= marpaESLIFShr.marpaESLIFEventType_t.MARPAESLIF_EVENTTYPE_AFTER;
            }

            if ((eventType & ESLIFEventType.EXHAUSTED) == ESLIFEventType.EXHAUSTED)
            {
                eventSeti &= marpaESLIFShr.marpaESLIFEventType_t.MARPAESLIF_EVENTTYPE_EXHAUSTED;
            }

            if ((eventType & ESLIFEventType.DISCARD) == ESLIFEventType.DISCARD)
            {
                eventSeti &= marpaESLIFShr.marpaESLIFEventType_t.MARPAESLIF_EVENTTYPE_DISCARD;
            }

            if (marpaESLIFShr.marpaESLIFRecognizer_event_onoffb(this.marpaESLIFRecognizerp, symbols, eventSeti, onoffb) == 0)
            {
                // throw new ESLIFException("marpaESLIFRecognizer_event_onoffb failure");
                output = false;
            }
            else
            {
                output = true;
            }

            Marshal.FreeHGlobal(symbols);
            return output;
        }

        protected virtual void Dispose(bool disposing)
        {
            if (!disposedValue)
            {
                if (disposing)
                {
                    // DONE: dispose managed state (managed objects)
                }

                // DONE: free unmanaged resources (unmanaged objects) and override finalizer
                this.DisposeUnmanagedResources();
                // DONE: set large fields to null
                disposedValue = true;
            }
        }

        // TODO: override finalizer only if 'Dispose(bool disposing)' has code to free unmanaged resources
        ~marpaESLIFRecognizer()
        {
            // Do not change this code. Put cleanup code in 'Dispose(bool disposing)' method
            Dispose(disposing: false);
        }

        public void Dispose()
        {
            // Do not change this code. Put cleanup code in 'Dispose(bool disposing)' method
            Dispose(disposing: true);
            GC.SuppressFinalize(this);
        }

        private void DisposeUnmanagedResources()
        {
            if (!this.shallow && this.marpaESLIFRecognizerp != IntPtr.Zero)
            {
                marpaESLIFShr.marpaESLIFRecognizer_freev(this.marpaESLIFRecognizerp);
            }
        }
    }
}
